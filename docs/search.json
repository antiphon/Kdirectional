[{"path":"http://antiphon.github.io/Kdirectional/articles/anisotropy-example.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Example 2D anisotropy analysis using Kdirectional","text":"package Kdirectional collection tools analysing isotropy 2- 3-dimensional point patterns. document shows use tools analysing synthetic example pattern. vignette use following packages:","code":"library(spatstat) library(Kdirectional)"},{"path":"http://antiphon.github.io/Kdirectional/articles/anisotropy-example.html","id":"example-pattern","dir":"Articles","previous_headings":"","what":"Example pattern","title":"Example 2D anisotropy analysis using Kdirectional","text":"simulate Strauss process transform . Assume transformation , compress x-axis factor 0.7 stretch y-axis keep volume 1. simulate original process window square transformation transform observed pattern Check things went ok (define little helper plotting):  pattern left want estimate.","code":"comp <- 0.7 D <- diag( c(comp, 1/comp)) angle <- pi/8 R <- rotationMatrix3(az=angle)[-3,-3] # internal, not rgl one C <- R%*%D set.seed(1) x0 <- rStrauss(500, gamma = 0.05, R = 0.03, W = affine(square(), solve(C))) x <- affine(x0, C) plotp <- function(...) plot(..., cex=.3) par(mfrow=c(1,2), mar=c(1,1,1,1)) plotp(x0) plotp(x)"},{"path":"http://antiphon.github.io/Kdirectional/articles/anisotropy-example.html","id":"nearest-neighbour-vectors","dir":"Articles","previous_headings":"","what":"Nearest neighbour vectors","title":"Example 2D anisotropy analysis using Kdirectional","text":"Check starters distribution nearest neighbours vectors.  blue rings give approximate 95% pointwise confidence intervals. Hard see anything definite, perhaps peakyness 2:30’oclock axis. Nearest neighbours informative, let’s analyse full set pairwise vectors.","code":"nna <- nnangle(coords(x)) ang <- nna[,1]-pi par(mfrow=c(1,2)) angles.flower(ang, ci = T, k=24, bty = \"n\") # Compare to spatstat rose(ang, unit = \"rad\", nclass = 24+1, main = \"\")"},{"path":"http://antiphon.github.io/Kdirectional/articles/anisotropy-example.html","id":"fry-points-and-ellipsoids","dir":"Articles","previous_headings":"","what":"Fry-points and ellipsoids","title":"Example 2D anisotropy analysis using Kdirectional","text":"paper [1], Fry-points tell us interesting things isotropy. r_adjust=.2 reduces computations pairs length within 20% window width, eps adds bit angular smoothing (radians), nangles chooses amount directions look . Plot estimated ellipsoids:  Oval shape visible, ambiguity rotation. Check ellipticity contrast \\(axis_x-axis_y=0\\):  first contour poorly estimated short range pairs, kind like Poisson noise. Others seem hint compression (p-values confidence intervals biased conservative). Let’s compute average rotation, scale ellipsoid det = 1 setting just_rotation=TRUE. Rotation seems non-zero (non \\(\\pm\\pi\\)). Ignore error variance, correct. Backrotate pattern: Next estimate compression minimizing difference K-functions along main axes. need provide grid optimise : compute anisotropy profile: set sector-K angle eps use integral squared differences (power=2) distance. Plot profiles, scaled 0-1 plotting (’s default):  Estimated compression Backtransform: Recap steps:  Finally, let’s illustrate estimated transformation. Use simulation estimation get ellipsoid object:","code":"f <- fry_ellipsoids(x, nvec=1:20, nangles = 30, eps=0.1, r_adjust = .2) plot(f, zoom=.3, used_points = FALSE) ci <- confint(f, nsim=500) print(summary(ci)[1:5,], digits=2) ##           mean  median sd     CI.2.5% CI.97.5% p      ## Contour_1 0.014 0.015  0.034  -0.048  0.11     0.68   ## Contour_2 0.015 0.014  0.0053 0.0054  0.026    0.01   ## Contour_3 0.015 0.015  0.0053 0.0056  0.027    0.0074 ## Contour_4 0.016 0.016  0.0066 0.0048  0.031    0.02   ## Contour_5 0.017 0.016  0.0084 0.0014  0.035    0.055 plot(ci, ylim = c(-1,1)*.1) contours <- f$ellipsoids[-1] mean_e <- mean_ellipsoids(contours, just_rotation = TRUE) summary(mean_e) ## Average 2D ellipse, computed from 19 2D ellipses. ##  ## Estimates: ##  Center:       (-0.003603507,  0.033050560) ##  Semi-axes lengths (absolute):     0.906708 : 1.113431  ##  Semi-axes lengths (relative):     1.000 : 1.228  ##  Rotation angles (rad):    -2.768  ##  Rotation angles (deg):    -158.6  ##  Error variance:       0.007447662 c(true=angle, est=mean_e$rot_angle + pi) ##      true       est  ## 0.3926991 0.3739214 Rhat <- rotationMatrix3(az=pi)[-3,-3]%*%mean_e$rot  xr <- affine(x, solve(Rhat)) gamma_vec <- seq(0.5, 1, by=0.05) grid <- cbind(gamma_vec, 1/gamma_vec) r <- seq(0, 0.2, length=50) eps <- pi/10 ani <- anisotropy_profile(xr, grid = grid, r=r, eps=eps, power=2) ani0 <- anisotropy_profile(x, grid = grid, r=r, eps=eps, power=2) plot(ani, type=\"b\", scale=TRUE) lines(ani0, type=\"b\", col=2) ( s <- summary(ani) ) ## Anisotropy profile ## Range of integration: [ 0 , 0.2 ] ## Difference power: 2  ## Optimal transformation: diag( 0.65 1.538462 ) c(true=comp, est=s$estimate[1]) ## true  est  ## 0.70 0.65 Dhat <- s$estimate xhat <- affine(xr, solve(Dhat)) par(mfrow=c(2,2), mar=c(1,1,1,1)) plotp(x) plotp(xr) plotp(xhat) plotp(x0) Chat <- Rhat %*% Dhat e0 <- ellipsoid_OLS( rellipsoid(1000, c(1,1), R = C) ) e <- ellipsoid_OLS( rellipsoid(1000, c(1,1), R = Chat) ) plot(e0, add=FALSE) plot(e, col=3)"},{"path":"http://antiphon.github.io/Kdirectional/articles/anisotropy-example.html","id":"references","dir":"Articles","previous_headings":"Fry-points and ellipsoids","what":"References","title":"Example 2D anisotropy analysis using Kdirectional","text":"[1] T Rajala, Särkkä, C Redenbach, M Sormani (2015): Estimating geometric anisotropy spatial point patterns, Spatial Statistics","code":""},{"path":"http://antiphon.github.io/Kdirectional/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Tuomas Rajala. Maintainer.","code":""},{"path":"http://antiphon.github.io/Kdirectional/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Rajala T (2022). Kdirectional: Analysis anisotropy point patterns using second order statistics. https://antiphon.github.io/Kdirectional/, https://github.com/antiphon/Kdirectional/.","code":"@Manual{,   title = {Kdirectional: Analysis of anisotropy in point patterns using second order statistics},   author = {Tuomas Rajala},   year = {2022},   note = {https://antiphon.github.io/Kdirectional/, https://github.com/antiphon/Kdirectional/}, }"},{"path":[]},{"path":"http://antiphon.github.io/Kdirectional/index.html","id":"description","dir":"","previous_headings":"","what":"Description","title":"Analysis of anisotropy in point patterns using second order statistics","text":"Kdirectional R-package containing tools anisotropy analysis point location data, also known point patterns, based pairwise differences. Focus tools work 2D 3D. package born collection custom functions manipulating visualising 3D point patterns, ice sheet bubble data analysed geometric anistropy estimation paper Rajala et al. 2016 1. might still exotic functions functions hanging around, undocumented. Rajala, Redenbach, Särkkä, Sormani (2018)2 collected “classical” point pattern statistics anisotropy analysis, follow paper 3 compared simulation trials see “features” informative anisotropy, powerful (statistically speaking) testing isotropy. Kdirectional includes summaries discussed papers. package absorbed functionality {ellipsoid} (https://www.github.com/antiphon/ellipsoid) order reduce dependencies. name comes first function, Ripley’s K-function directional analysis (see Kest_directional). codebase starts almost decade old places, documentation missing, incomplete. Many functions based proper research, properly tested. spot point improvement please contact author submit issue github repository, https://www.github.com/antiphon/Kdirectional.","code":""},{"path":"http://antiphon.github.io/Kdirectional/index.html","id":"how-to-install","dir":"","previous_headings":"","what":"How to install","title":"Analysis of anisotropy in point patterns using second order statistics","text":"install Github, use {devtools} {remotes}. also install documentation (vignette), use documentation available also pkgdown site.","code":"# Requirements: require(spatstat) require(sp) require(rgl) require(mvtnorm)  # Install: library(devtools) # or remotes install_github('antiphon/Kdirectional') install_github('antiphon/Kdirectional', build_vignettes = TRUE)"},{"path":"http://antiphon.github.io/Kdirectional/index.html","id":"references","dir":"","previous_headings":"","what":"References","title":"Analysis of anisotropy in point patterns using second order statistics","text":"4: Rajala, Tuomas ., Aila Särkkä, Claudia Redenbach, Martina Sormani. ‘Estimating Geometric Anisotropy Spatial Point Patterns’. Spatial Statistics 15 (February 2016): 100–114. https://doi.org/10.1016/j.spasta.2015.12.005. 5: Rajala, T., C. Redenbach, . Särkkä, M. Sormani. ‘Review Anisotropy Analysis Spatial Point Patterns’. Spatial Statistics 28 (December 2018): 141–68. https://doi.org/10.1016/j.spasta.2018.04.005. 6: Rajala, T., C. Redenbach, . Särkkä, M. Sormani. ‘Tests Isotropy Spatial Point Patterns – Comparison Statistical Indices’. Spatial Statistics 52 (December 2022): 100716. https://doi.org/10.1016/j.spasta.2022.100716.","code":""},{"path":"http://antiphon.github.io/Kdirectional/reference/add_ellipsoid2persp.html","id":null,"dir":"Reference","previous_headings":"","what":"add ellipse to persp plot — add_ellipsoid2persp","title":"add ellipse to persp plot — add_ellipsoid2persp","text":"add ellipse persp plot","code":""},{"path":"http://antiphon.github.io/Kdirectional/reference/add_ellipsoid2persp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"add ellipse to persp plot — add_ellipsoid2persp","text":"","code":"add_ellipsoid2persp(x, N = 2, colmap = values2colors, pmat, ...)"},{"path":"http://antiphon.github.io/Kdirectional/reference/ai2ll.html","id":null,"dir":"Reference","previous_headings":"","what":"azi-inc to lat lon — ai2ll","title":"azi-inc to lat lon — ai2ll","text":"azi-inc lat lon","code":""},{"path":"http://antiphon.github.io/Kdirectional/reference/ai2ll.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"azi-inc to lat lon — ai2ll","text":"","code":"ai2ll(aziinc)"},{"path":"http://antiphon.github.io/Kdirectional/reference/ai2xyz.html","id":null,"dir":"Reference","previous_headings":"","what":"(azi,incl) to 3d coordinates — ai2xyz","title":"(azi,incl) to 3d coordinates — ai2xyz","text":"(azi,incl) 3d coordinates","code":""},{"path":"http://antiphon.github.io/Kdirectional/reference/ai2xyz.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"(azi,incl) to 3d coordinates — ai2xyz","text":"","code":"ai2xyz(aziinc)"},{"path":"http://antiphon.github.io/Kdirectional/reference/angles.bin.html","id":null,"dir":"Reference","previous_headings":"","what":"bin angles — angles.bin","title":"bin angles — angles.bin","text":"bin angles","code":""},{"path":"http://antiphon.github.io/Kdirectional/reference/angles.bin.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"bin angles — angles.bin","text":"","code":"angles.bin(x, k = 25)"},{"path":"http://antiphon.github.io/Kdirectional/reference/angles.bin.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"bin angles — angles.bin","text":"k number bins vector angles, -pi pi","code":""},{"path":"http://antiphon.github.io/Kdirectional/reference/angles.cdf.html","id":null,"dir":"Reference","previous_headings":"","what":"Cumulative distribution function and pointwise CI — angles.cdf","title":"Cumulative distribution function and pointwise CI — angles.cdf","text":"Cumulative distribution function pointwise CI","code":""},{"path":"http://antiphon.github.io/Kdirectional/reference/angles.cdf.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Cumulative distribution function and pointwise CI — angles.cdf","text":"","code":"angles.cdf(angles, n = 50, ...)"},{"path":"http://antiphon.github.io/Kdirectional/reference/angles.cdf.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Cumulative distribution function and pointwise CI — angles.cdf","text":"angles angles vector, 2D pattern n grid resolution ... ignored","code":""},{"path":"http://antiphon.github.io/Kdirectional/reference/angles.flower.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot a rose of directions for a set of angles — angles.flower","title":"Plot a rose of directions for a set of angles — angles.flower","text":"Useful checking e.g. nnangles- fry_points- outputs.","code":""},{"path":"http://antiphon.github.io/Kdirectional/reference/angles.flower.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot a rose of directions for a set of angles — angles.flower","text":"","code":"angles.flower(angles, binned, span = 0, k = 25, nums = FALSE, ci = FALSE, ...)"},{"path":"http://antiphon.github.io/Kdirectional/reference/angles.flower.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot a rose of directions for a set of angles — angles.flower","text":"angles observed angles , -pi pi binned binning angles. angles needed. span >0, span passed loess smoothing smoothed values added plot k number bins binning done angles nums plot values ci Plot approximate pointwise 95% confidence interval ... passed plot (e.g. main)","code":""},{"path":"http://antiphon.github.io/Kdirectional/reference/angles.smooth.html","id":null,"dir":"Reference","previous_headings":"","what":"smoothen an histogram of angles — angles.smooth","title":"smoothen an histogram of angles — angles.smooth","text":"smoothen histogram angles","code":""},{"path":"http://antiphon.github.io/Kdirectional/reference/angles.smooth.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"smoothen an histogram of angles — angles.smooth","text":"","code":"angles.smooth(binned, ...)"},{"path":"http://antiphon.github.io/Kdirectional/reference/angles.smooth.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"smoothen an histogram of angles — angles.smooth","text":"binned binning angles ... passed loess","code":""},{"path":"http://antiphon.github.io/Kdirectional/reference/angle_2_unit.html","id":null,"dir":"Reference","previous_headings":"","what":"Angle to unit vector — angle_2_unit","title":"Angle to unit vector — angle_2_unit","text":"Angle unit vector","code":""},{"path":"http://antiphon.github.io/Kdirectional/reference/angle_2_unit.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Angle to unit vector — angle_2_unit","text":"","code":"angle_2_unit(angle)"},{"path":"http://antiphon.github.io/Kdirectional/reference/angle_2_unit.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Angle to unit vector — angle_2_unit","text":"vector 1 2 components (2d 3d)","code":""},{"path":"http://antiphon.github.io/Kdirectional/reference/anisotropy_abs_fast.html","id":null,"dir":"Reference","previous_headings":"","what":"Fast absolute anisotropy  statistic — anisotropy_abs_fast","title":"Fast absolute anisotropy  statistic — anisotropy_abs_fast","text":"Fast absolute anisotropy  statistic","code":""},{"path":"http://antiphon.github.io/Kdirectional/reference/anisotropy_abs_fast.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fast absolute anisotropy  statistic — anisotropy_abs_fast","text":"","code":"anisotropy_abs_fast(f, r, eps, antipodal, power)"},{"path":"http://antiphon.github.io/Kdirectional/reference/anisotropy_abs_fast.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fast absolute anisotropy  statistic — anisotropy_abs_fast","text":"f Fry points, border corrected r range integration eps width cone angle antipodal TRUE, antipodes equated","code":""},{"path":"http://antiphon.github.io/Kdirectional/reference/anisotropy_profile.html","id":null,"dir":"Reference","previous_headings":"","what":"Anisotropy profile for given diagonal transformations — anisotropy_profile","title":"Anisotropy profile for given diagonal transformations — anisotropy_profile","text":"Compares directed sector-K functions along main axes.","code":""},{"path":"http://antiphon.github.io/Kdirectional/reference/anisotropy_profile.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Anisotropy profile for given diagonal transformations — anisotropy_profile","text":"","code":"anisotropy_profile(   x,   grid,   r,   verb = FALSE,   eps = pi/4,   border = TRUE,   antipodal = TRUE,   power = 2,   ... )"},{"path":"http://antiphon.github.io/Kdirectional/reference/anisotropy_profile.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Anisotropy profile for given diagonal transformations — anisotropy_profile","text":"x point pattern grid p x dim matrix giving diagonals candidate transformations r vector range values sum ('integration nodes') verb verbose? eps Sector angle border Border correction? use unless data large. antipodal Use antipodally symmetric estimation sector-K? power Power differences, absolute value power=1.","code":""},{"path":"http://antiphon.github.io/Kdirectional/reference/anisotropy_profile.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Anisotropy profile for given diagonal transformations — anisotropy_profile","text":"v grid, transform x -> T(v)x summarize anisotropy absolute integral difference x-y-z-directed K-functions. transformations T(v) given diagonal vector v, rows parameter grid. assume rotation present, rotation already corrected , squared difference sums directed sector-K functions along main axes indicate optimal v.","code":""},{"path":"http://antiphon.github.io/Kdirectional/reference/antipode.html","id":null,"dir":"Reference","previous_headings":"","what":"antipode lat and lon — antipode","title":"antipode lat and lon — antipode","text":"antipode lat lon","code":""},{"path":"http://antiphon.github.io/Kdirectional/reference/antipode.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"antipode lat and lon — antipode","text":"","code":"antipode(latlon)"},{"path":"http://antiphon.github.io/Kdirectional/reference/as_bbpoly.html","id":null,"dir":"Reference","previous_headings":"","what":"Turn something into a bbpoloy — as_bbpoly","title":"Turn something into a bbpoloy — as_bbpoly","text":"Turn something bbpoloy","code":""},{"path":"http://antiphon.github.io/Kdirectional/reference/as_bbpoly.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Turn something into a bbpoloy — as_bbpoly","text":"","code":"as_bbpoly(x)"},{"path":"http://antiphon.github.io/Kdirectional/reference/as_bbpoly.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Turn something into a bbpoloy — as_bbpoly","text":"x input","code":""},{"path":"http://antiphon.github.io/Kdirectional/reference/as_bbpoly.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Turn something into a bbpoloy — as_bbpoly","text":"understands: matrix (bbox); bbquad; list vertices, egdes faces 3d","code":""},{"path":"http://antiphon.github.io/Kdirectional/reference/as_ellipsoid.html","id":null,"dir":"Reference","previous_headings":"","what":"Create an ellipsoid object — as_ellipsoid","title":"Create an ellipsoid object — as_ellipsoid","text":"Create ellipsoid object","code":""},{"path":"http://antiphon.github.io/Kdirectional/reference/as_ellipsoid.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create an ellipsoid object — as_ellipsoid","text":"","code":"as_ellipsoid(semi_axes = c(1, 1, 1), R = diag(0, 3), center = c(0, 0, 0))"},{"path":"http://antiphon.github.io/Kdirectional/reference/as_ellipsoid.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create an ellipsoid object — as_ellipsoid","text":"semi_axes semi_axes lengths R rotation matrix center center coordinates","code":""},{"path":"http://antiphon.github.io/Kdirectional/reference/azi2lon.html","id":null,"dir":"Reference","previous_headings":"","what":"azimuth to longitude — azi2lon","title":"azimuth to longitude — azi2lon","text":"azimuth longitude","code":""},{"path":"http://antiphon.github.io/Kdirectional/reference/azi2lon.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"azimuth to longitude — azi2lon","text":"","code":"azi2lon(azi)"},{"path":"http://antiphon.github.io/Kdirectional/reference/aziinc2rotationMatrix.html","id":null,"dir":"Reference","previous_headings":"","what":"Rotation using azimuth-inclination. — aziinc2rotationMatrix","title":"Rotation using azimuth-inclination. — aziinc2rotationMatrix","text":"Rotation using azimuth-inclination.","code":""},{"path":"http://antiphon.github.io/Kdirectional/reference/aziinc2rotationMatrix.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Rotation using azimuth-inclination. — aziinc2rotationMatrix","text":"","code":"aziinc2rotationMatrix(rot_ai = c(0, 0))"},{"path":"http://antiphon.github.io/Kdirectional/reference/bartletts_spectral_density.html","id":null,"dir":"Reference","previous_headings":"","what":"Bartlett's spectral density — bartletts_spectral_density","title":"Bartlett's spectral density — bartletts_spectral_density","text":"Periodogram estimator","code":""},{"path":"http://antiphon.github.io/Kdirectional/reference/bartletts_spectral_density.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Bartlett's spectral density — bartletts_spectral_density","text":"","code":"bartletts_spectral_density(x, omega, ...)"},{"path":"http://antiphon.github.io/Kdirectional/reference/bartletts_spectral_density.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Bartlett's spectral density — bartletts_spectral_density","text":"x point pattern, list $x $bbox omega frequencies ... ignored","code":""},{"path":"http://antiphon.github.io/Kdirectional/reference/bartletts_spectral_density.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Bartlett's spectral density — bartletts_spectral_density","text":"estimate spectral density using periodogram suggested Bartlett 1964, $$\\mathcal{F}(\\omega) = \\lambda + \\lambda^2\\int_{R^d}[g(z)-1]e^{-\\omega^T z}dz$$ assume process stationary intensity lambda pair correlation function $g$.  Isotropy assumed. function deliberately scale assume form frequencies (2kpi/n, k integer),  consensus best form. Additionally, scaling transformation pattern conducted. frequencies spectrum estimated given omega: 1) omega vector, expand d-dimensional frequencies using expand.grid. 2) omega column matrix dimension m x d, row interpreted frequency. edge correction applied none known. ","code":""},{"path":"http://antiphon.github.io/Kdirectional/reference/bbox2bbpoly.html","id":null,"dir":"Reference","previous_headings":"","what":"Construct a bbpoly from column range matrix — bbox2bbpoly","title":"Construct a bbpoly from column range matrix — bbox2bbpoly","text":"Construct bbpoly column range matrix","code":""},{"path":"http://antiphon.github.io/Kdirectional/reference/bbox2bbpoly.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Construct a bbpoly from column range matrix — bbox2bbpoly","text":"","code":"bbox2bbpoly(bb)"},{"path":"http://antiphon.github.io/Kdirectional/reference/bbox2bbquad.html","id":null,"dir":"Reference","previous_headings":"","what":"Construct a bbquad from column range matrix — bbox2bbquad","title":"Construct a bbquad from column range matrix — bbox2bbquad","text":"Construct bbquad column range matrix","code":""},{"path":"http://antiphon.github.io/Kdirectional/reference/bbox2bbquad.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Construct a bbquad from column range matrix — bbox2bbquad","text":"","code":"bbox2bbquad(bb)"},{"path":"http://antiphon.github.io/Kdirectional/reference/bbox_affine.html","id":null,"dir":"Reference","previous_headings":"","what":"Affine transformation of a bbox or bbquad — bbox_affine","title":"Affine transformation of a bbox or bbquad — bbox_affine","text":"Affine transformation bbox bbquad","code":""},{"path":"http://antiphon.github.io/Kdirectional/reference/bbox_affine.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Affine transformation of a bbox or bbquad — bbox_affine","text":"","code":"bbox_affine(bbox, A, s = c(0, 0, 0))"},{"path":"http://antiphon.github.io/Kdirectional/reference/bbox_affine.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Affine transformation of a bbox or bbquad — bbox_affine","text":"bbox bounding box transformation matrix s shift vector","code":""},{"path":"http://antiphon.github.io/Kdirectional/reference/bbox_affine.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Affine transformation of a bbox or bbquad — bbox_affine","text":"diagonal, bbox transformed bbquad.","code":""},{"path":"http://antiphon.github.io/Kdirectional/reference/bbox_dim.html","id":null,"dir":"Reference","previous_headings":"","what":"Bounding box dimension — bbox_dim","title":"Bounding box dimension — bbox_dim","text":"Bounding box dimension","code":""},{"path":"http://antiphon.github.io/Kdirectional/reference/bbox_dim.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Bounding box dimension — bbox_dim","text":"","code":"bbox_dim(x)"},{"path":"http://antiphon.github.io/Kdirectional/reference/bbox_dim.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Bounding box dimension — bbox_dim","text":"x Bounding box bbquad","code":""},{"path":"http://antiphon.github.io/Kdirectional/reference/bbox_distance.html","id":null,"dir":"Reference","previous_headings":"","what":"distance from points to bbox border — bbox_distance","title":"distance from points to bbox border — bbox_distance","text":"distance points bbox border","code":""},{"path":"http://antiphon.github.io/Kdirectional/reference/bbox_distance.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"distance from points to bbox border — bbox_distance","text":"","code":"bbox_distance(x, bbox)"},{"path":"http://antiphon.github.io/Kdirectional/reference/bbox_distance.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"distance from points to bbox border — bbox_distance","text":"x coordinate matrix bbox bounding box","code":""},{"path":"http://antiphon.github.io/Kdirectional/reference/bbox_make.html","id":null,"dir":"Reference","previous_headings":"","what":"compute the bounding box for coordinates — bbox_make","title":"compute the bounding box for coordinates — bbox_make","text":"compute bounding box coordinates","code":""},{"path":"http://antiphon.github.io/Kdirectional/reference/bbox_make.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"compute the bounding box for coordinates — bbox_make","text":"","code":"bbox_make(x, expand = TRUE)"},{"path":"http://antiphon.github.io/Kdirectional/reference/bbox_make.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"compute the bounding box for coordinates — bbox_make","text":"x coordinate matrix expand expand bit? (ripras, see details)","code":""},{"path":"http://antiphon.github.io/Kdirectional/reference/bbox_make.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"compute the bounding box for coordinates — bbox_make","text":"expand = TRUE, bbox expanded using estimate true window area described Ripley & Rasson (1977). convex hull replaced cuboid aligned axes.","code":""},{"path":"http://antiphon.github.io/Kdirectional/reference/bbox_sideLengths.html","id":null,"dir":"Reference","previous_headings":"","what":"Bounding box side lengths — bbox_sideLengths","title":"Bounding box side lengths — bbox_sideLengths","text":"Bounding box side lengths","code":""},{"path":"http://antiphon.github.io/Kdirectional/reference/bbox_sideLengths.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Bounding box side lengths — bbox_sideLengths","text":"","code":"bbox_sideLengths(bbox)"},{"path":"http://antiphon.github.io/Kdirectional/reference/bbox_volume.html","id":null,"dir":"Reference","previous_headings":"","what":"Bounding box volume — bbox_volume","title":"Bounding box volume — bbox_volume","text":"Bounding box volume","code":""},{"path":"http://antiphon.github.io/Kdirectional/reference/bbox_volume.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Bounding box volume — bbox_volume","text":"","code":"bbox_volume(bbox)"},{"path":"http://antiphon.github.io/Kdirectional/reference/bbpoly2bbox.html","id":null,"dir":"Reference","previous_headings":"","what":"Return the bounding box of a bbpoly — bbpoly2bbox","title":"Return the bounding box of a bbpoly — bbpoly2bbox","text":"Return bounding box bbpoly","code":""},{"path":"http://antiphon.github.io/Kdirectional/reference/bbpoly2bbox.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Return the bounding box of a bbpoly — bbpoly2bbox","text":"","code":"bbpoly2bbox(x)"},{"path":"http://antiphon.github.io/Kdirectional/reference/bbpoly_affine.html","id":null,"dir":"Reference","previous_headings":"","what":"Affine transformation of a polytope — bbpoly_affine","title":"Affine transformation of a polytope — bbpoly_affine","text":"Affine transformation polytope","code":""},{"path":"http://antiphon.github.io/Kdirectional/reference/bbpoly_affine.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Affine transformation of a polytope — bbpoly_affine","text":"","code":"bbpoly_affine(bbpoly, A, s = c(0, 0, 0), center_before_A = FALSE)"},{"path":"http://antiphon.github.io/Kdirectional/reference/bbpoly_affine.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Affine transformation of a polytope — bbpoly_affine","text":"bbpoly bbpoly object linear transformation center_before_A Center polygon mass centrum applying ? Reversed shift. shift shift vector","code":""},{"path":"http://antiphon.github.io/Kdirectional/reference/bbpoly_correct_faces.html","id":null,"dir":"Reference","previous_headings":"","what":"Check and correct for orientation of faces — bbpoly_correct_faces","title":"Check and correct for orientation of faces — bbpoly_correct_faces","text":"Assumes faces vertices plane","code":""},{"path":"http://antiphon.github.io/Kdirectional/reference/bbpoly_correct_faces.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check and correct for orientation of faces — bbpoly_correct_faces","text":"","code":"bbpoly_correct_faces(x)"},{"path":"http://antiphon.github.io/Kdirectional/reference/bbpoly_correct_faces.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check and correct for orientation of faces — bbpoly_correct_faces","text":"x bbpoly object 3D","code":""},{"path":"http://antiphon.github.io/Kdirectional/reference/bbpoly_default.html","id":null,"dir":"Reference","previous_headings":"","what":"Regular bounding box as a polytope — bbpoly_default","title":"Regular bounding box as a polytope — bbpoly_default","text":"Regular bounding box polytope","code":""},{"path":"http://antiphon.github.io/Kdirectional/reference/bbpoly_default.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Regular bounding box as a polytope — bbpoly_default","text":"","code":"bbpoly_default(xl = c(-0.5, 0.5), yl = xl, zl = xl)"},{"path":"http://antiphon.github.io/Kdirectional/reference/bbpoly_default.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Regular bounding box as a polytope — bbpoly_default","text":"xl x range Default -.5,5 yl y range. Default = xl zl z range. Default = xl. Set NA 2D.","code":""},{"path":"http://antiphon.github.io/Kdirectional/reference/bbpoly_default.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Regular bounding box as a polytope — bbpoly_default","text":"Default output 3D cube vertices corners [-.5,.5]^3. See also poly2bbpoly flexible windows 2D.","code":""},{"path":"http://antiphon.github.io/Kdirectional/reference/bbpoly_intersection.html","id":null,"dir":"Reference","previous_headings":"","what":"Intersection of two polytopes — bbpoly_intersection","title":"Intersection of two polytopes — bbpoly_intersection","text":"Compute \"intesection b\"","code":""},{"path":"http://antiphon.github.io/Kdirectional/reference/bbpoly_intersection.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Intersection of two polytopes — bbpoly_intersection","text":"","code":"bbpoly_intersection(a, b)"},{"path":"http://antiphon.github.io/Kdirectional/reference/bbpoly_intersection.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Intersection of two polytopes — bbpoly_intersection","text":"Polytope b Polytope b","code":""},{"path":"http://antiphon.github.io/Kdirectional/reference/bbpoly_planes.html","id":null,"dir":"Reference","previous_headings":"","what":"Surface planes of bbpoly — bbpoly_planes","title":"Surface planes of bbpoly — bbpoly_planes","text":"Surface planes bbpoly","code":""},{"path":"http://antiphon.github.io/Kdirectional/reference/bbpoly_planes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Surface planes of bbpoly — bbpoly_planes","text":"","code":"bbpoly_planes(x)"},{"path":"http://antiphon.github.io/Kdirectional/reference/bbpoly_planes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Surface planes of bbpoly — bbpoly_planes","text":"x bbpoly object","code":""},{"path":"http://antiphon.github.io/Kdirectional/reference/bbpoly_planes.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Surface planes of bbpoly — bbpoly_planes","text":"Returns normals edges (2d) faces (3d). Assumes  vertices face plane.","code":""},{"path":"http://antiphon.github.io/Kdirectional/reference/bbpoly_simplex.html","id":null,"dir":"Reference","previous_headings":"","what":"Simplex object — bbpoly_simplex","title":"Simplex object — bbpoly_simplex","text":"Simplex object","code":""},{"path":"http://antiphon.github.io/Kdirectional/reference/bbpoly_simplex.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simplex object — bbpoly_simplex","text":"","code":"bbpoly_simplex(d = 3)"},{"path":"http://antiphon.github.io/Kdirectional/reference/bbpoly_simplices.html","id":null,"dir":"Reference","previous_headings":"","what":"Split a polytope to simplices. — bbpoly_simplices","title":"Split a polytope to simplices. — bbpoly_simplices","text":"Split polytope simplices.","code":""},{"path":"http://antiphon.github.io/Kdirectional/reference/bbpoly_simplices.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Split a polytope to simplices. — bbpoly_simplices","text":"","code":"bbpoly_simplices(x, as.bbpoly = FALSE)"},{"path":"http://antiphon.github.io/Kdirectional/reference/bbpoly_simplices.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Split a polytope to simplices. — bbpoly_simplices","text":"x bbpoly object .bbpoly Return simplices bbpoly-objects?","code":""},{"path":"http://antiphon.github.io/Kdirectional/reference/bbpoly_simplices.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Split a polytope to simplices. — bbpoly_simplices","text":"Assumes convexity, check.","code":""},{"path":"http://antiphon.github.io/Kdirectional/reference/bbpoly_volume.html","id":null,"dir":"Reference","previous_headings":"","what":"Volume of a bbpoly — bbpoly_volume","title":"Volume of a bbpoly — bbpoly_volume","text":"Volume bbpoly","code":""},{"path":"http://antiphon.github.io/Kdirectional/reference/bbpoly_volume.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Volume of a bbpoly — bbpoly_volume","text":"","code":"bbpoly_volume(x)"},{"path":"http://antiphon.github.io/Kdirectional/reference/bbpoly_volume.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Volume of a bbpoly — bbpoly_volume","text":"x bbpoly object","code":""},{"path":"http://antiphon.github.io/Kdirectional/reference/bbpoly_volume.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Volume of a bbpoly — bbpoly_volume","text":"splits bbpoly simplices sums  volume.","code":""},{"path":"http://antiphon.github.io/Kdirectional/reference/bbquad2bbox.html","id":null,"dir":"Reference","previous_headings":"","what":"Return the bounding box of a bbquad — bbquad2bbox","title":"Return the bounding box of a bbquad — bbquad2bbox","text":"Return bounding box bbquad","code":""},{"path":"http://antiphon.github.io/Kdirectional/reference/bbquad2bbox.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Return the bounding box of a bbquad — bbquad2bbox","text":"","code":"bbquad2bbox(x)"},{"path":"http://antiphon.github.io/Kdirectional/reference/bbquad_affine.html","id":null,"dir":"Reference","previous_headings":"","what":"Affine transformation of a bbquad — bbquad_affine","title":"Affine transformation of a bbquad — bbquad_affine","text":"Affine transformation bbquad","code":""},{"path":"http://antiphon.github.io/Kdirectional/reference/bbquad_affine.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Affine transformation of a bbquad — bbquad_affine","text":"","code":"bbquad_affine(x, A, s = c(0, 0, 0))"},{"path":"http://antiphon.github.io/Kdirectional/reference/bbquad_affine.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Affine transformation of a bbquad — bbquad_affine","text":"x bbquad object transformation matrix s shift vector","code":""},{"path":"http://antiphon.github.io/Kdirectional/reference/bbquad_default.html","id":null,"dir":"Reference","previous_headings":"","what":"Regular bounding box as bounding box of quadrilaterals — bbquad_default","title":"Regular bounding box as bounding box of quadrilaterals — bbquad_default","text":"Regular bounding box bounding box quadrilaterals","code":""},{"path":"http://antiphon.github.io/Kdirectional/reference/bbquad_default.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Regular bounding box as bounding box of quadrilaterals — bbquad_default","text":"","code":"bbquad_default(xl = c(-0.5, 0.5), yl = xl, zl = xl)"},{"path":"http://antiphon.github.io/Kdirectional/reference/bbquad_default.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Regular bounding box as bounding box of quadrilaterals — bbquad_default","text":"xl x range Default -.5,5 yl y range. Default = xl zl z range. Default = xl. Set NA 2D.","code":""},{"path":"http://antiphon.github.io/Kdirectional/reference/bbquad_default.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Regular bounding box as bounding box of quadrilaterals — bbquad_default","text":"Default output 3D cube vertices corners [-.5,.5]^3. See also poly_to_bbquad flexible windows 2D.","code":""},{"path":"http://antiphon.github.io/Kdirectional/reference/bbquad_distance.html","id":null,"dir":"Reference","previous_headings":"","what":"Distance from points to bbquad walls — bbquad_distance","title":"Distance from points to bbquad walls — bbquad_distance","text":"Distance points bbquad walls","code":""},{"path":"http://antiphon.github.io/Kdirectional/reference/bbquad_distance.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Distance from points to bbquad walls — bbquad_distance","text":"","code":"bbquad_distance(x, b, warn = TRUE)"},{"path":"http://antiphon.github.io/Kdirectional/reference/bbquad_distance.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Distance from points to bbquad walls — bbquad_distance","text":"x n x 3 matrix locations b quadrilateral bounding box warn Emit warning points outside box? (default: TRUE) Note: Returned distance negative point outside box.","code":""},{"path":"http://antiphon.github.io/Kdirectional/reference/bbquad_edges.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the edges of the quad box — bbquad_edges","title":"Get the edges of the quad box — bbquad_edges","text":"Get edges quad box","code":""},{"path":"http://antiphon.github.io/Kdirectional/reference/bbquad_edges.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the edges of the quad box — bbquad_edges","text":"","code":"bbquad_edges(x)"},{"path":"http://antiphon.github.io/Kdirectional/reference/bbquad_planes.html","id":null,"dir":"Reference","previous_headings":"","what":"Surface planes — bbquad_planes","title":"Surface planes — bbquad_planes","text":"normal vector point -format. 2D returns surface lines.","code":""},{"path":"http://antiphon.github.io/Kdirectional/reference/bbquad_planes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Surface planes — bbquad_planes","text":"","code":"bbquad_planes(b)"},{"path":"http://antiphon.github.io/Kdirectional/reference/bbquad_simplices.html","id":null,"dir":"Reference","previous_headings":"","what":"Triangulate a bbquad — bbquad_simplices","title":"Triangulate a bbquad — bbquad_simplices","text":"Due assuming quadrilateral polytope, get 2 simplices (triangles/tetrahedrons)","code":""},{"path":"http://antiphon.github.io/Kdirectional/reference/bbquad_simplices.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Triangulate a bbquad — bbquad_simplices","text":"","code":"bbquad_simplices(x)"},{"path":"http://antiphon.github.io/Kdirectional/reference/bbquad_simplices.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Triangulate a bbquad — bbquad_simplices","text":"x bbquad object","code":""},{"path":"http://antiphon.github.io/Kdirectional/reference/bbquad_volume.html","id":null,"dir":"Reference","previous_headings":"","what":"Volume of a bbquad — bbquad_volume","title":"Volume of a bbquad — bbquad_volume","text":"Volume bbquad","code":""},{"path":"http://antiphon.github.io/Kdirectional/reference/bbquad_volume.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Volume of a bbquad — bbquad_volume","text":"","code":"bbquad_volume(x)"},{"path":"http://antiphon.github.io/Kdirectional/reference/bbquad_volume.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Volume of a bbquad — bbquad_volume","text":"x bbquad-object","code":""},{"path":"http://antiphon.github.io/Kdirectional/reference/bbquad_volume.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Volume of a bbquad — bbquad_volume","text":"split bbquad simplices return sum simplex volumes.","code":""},{"path":"http://antiphon.github.io/Kdirectional/reference/check_bbpoly.html","id":null,"dir":"Reference","previous_headings":"","what":"Check with error — check_bbpoly","title":"Check with error — check_bbpoly","text":"Check error","code":""},{"path":"http://antiphon.github.io/Kdirectional/reference/check_bbpoly.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check with error — check_bbpoly","text":"","code":"check_bbpoly(x)"},{"path":"http://antiphon.github.io/Kdirectional/reference/check_directions.html","id":null,"dir":"Reference","previous_headings":"","what":"Sector computation directions — check_directions","title":"Sector computation directions — check_directions","text":"Sector computation directions","code":""},{"path":"http://antiphon.github.io/Kdirectional/reference/check_directions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sector computation directions — check_directions","text":"","code":"check_directions(theta, epsilon, unit, dim = 2, antipode = FALSE, n_dir = 12)"},{"path":"http://antiphon.github.io/Kdirectional/reference/check_pp.html","id":null,"dir":"Reference","previous_headings":"","what":"check pattern format — check_pp","title":"check pattern format — check_pp","text":"check pattern format","code":""},{"path":"http://antiphon.github.io/Kdirectional/reference/check_pp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"check pattern format — check_pp","text":"","code":"check_pp(x)"},{"path":"http://antiphon.github.io/Kdirectional/reference/check_pp.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"check pattern format — check_pp","text":"x pattern candidate","code":""},{"path":"http://antiphon.github.io/Kdirectional/reference/check_vector_passes_triangle.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if a vector (or vectors), multiplied by inf, go(es) through a triangle in 3D — check_vector_passes_triangle","title":"Check if a vector (or vectors), multiplied by inf, go(es) through a triangle in 3D — check_vector_passes_triangle","text":"Check vector (vectors), multiplied inf, go(es) triangle 3D","code":""},{"path":"http://antiphon.github.io/Kdirectional/reference/check_vector_passes_triangle.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if a vector (or vectors), multiplied by inf, go(es) through a triangle in 3D — check_vector_passes_triangle","text":"","code":"check_vector_passes_triangle(u, triangle)"},{"path":"http://antiphon.github.io/Kdirectional/reference/confint.ellipsoid.html","id":null,"dir":"Reference","previous_headings":"","what":"Confidence interval for ellipsoid parameters using simulation — confint.ellipsoid","title":"Confidence interval for ellipsoid parameters using simulation — confint.ellipsoid","text":"Assuming normality errors.","code":""},{"path":"http://antiphon.github.io/Kdirectional/reference/confint.ellipsoid.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Confidence interval for ellipsoid parameters using simulation — confint.ellipsoid","text":"","code":"# S3 method for ellipsoid confint(x, fun, nsim = 1000, probs = c(0.025, 0.975), Asolve.eps = 0.01, ...)"},{"path":"http://antiphon.github.io/Kdirectional/reference/confint.ellipsoid.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Confidence interval for ellipsoid parameters using simulation — confint.ellipsoid","text":"x Fitted ellipsoid fun Optional contrast function. See ellipse_contrast_2d example. probs quantiles CI. Default c(0.025, 0.975) Asolve.eps Inflate matrix diagonals factor eps, avoid numerical problems (near) singular parameter sets. ... Passed sample_ellipse_beta tol tolerance absolute  deviation ||beta||=1 constraint.","code":""},{"path":"http://antiphon.github.io/Kdirectional/reference/confint.ellipsoid_old.html","id":null,"dir":"Reference","previous_headings":"","what":"Confidence interval for ellipsoid parameters using simulation — confint.ellipsoid_old","title":"Confidence interval for ellipsoid parameters using simulation — confint.ellipsoid_old","text":"Assuming normality errors.","code":""},{"path":"http://antiphon.github.io/Kdirectional/reference/confint.ellipsoid_old.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Confidence interval for ellipsoid parameters using simulation — confint.ellipsoid_old","text":"","code":"# S3 method for ellipsoid_old confint(x, fun, nsim = 1000, probs = c(0.025, 0.975), ...)"},{"path":"http://antiphon.github.io/Kdirectional/reference/confint.ellipsoid_old.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Confidence interval for ellipsoid parameters using simulation — confint.ellipsoid_old","text":"x Fitted ellipsoid fun Optional contrast function. See ellipse_contrast_2d example. probs quantiles CI. Default c(0.025, 0.975) tol tolerance absolute  deviation ||beta||=1 constraint.","code":""},{"path":"http://antiphon.github.io/Kdirectional/reference/confint.fryellipsoids.html","id":null,"dir":"Reference","previous_headings":"","what":"Confidence intervals for Fry ellipsoids — confint.fryellipsoids","title":"Confidence intervals for Fry ellipsoids — confint.fryellipsoids","text":"Confidence intervals Fry ellipsoids","code":""},{"path":"http://antiphon.github.io/Kdirectional/reference/confint.fryellipsoids.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Confidence intervals for Fry ellipsoids — confint.fryellipsoids","text":"","code":"# S3 method for fryellipsoids confint(x, fun, ...)"},{"path":"http://antiphon.github.io/Kdirectional/reference/confint.fryellipsoids.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Confidence intervals for Fry ellipsoids — confint.fryellipsoids","text":"x Fitted Fry-ellipsoids object fun contrast function, passed confint.ellipsoid ... Passed confint.ellipsoid","code":""},{"path":"http://antiphon.github.io/Kdirectional/reference/confint.fryellipsoids.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Confidence intervals for Fry ellipsoids — confint.fryellipsoids","text":"See 'confint.ellipsoid' 'ellipsoid' details ...","code":""},{"path":"http://antiphon.github.io/Kdirectional/reference/coord_affine.html","id":null,"dir":"Reference","previous_headings":"","what":"Affine transfomration of coordinates — coord_affine","title":"Affine transfomration of coordinates — coord_affine","text":"Affine transfomration coordinates","code":""},{"path":"http://antiphon.github.io/Kdirectional/reference/coord_affine.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Affine transfomration of coordinates — coord_affine","text":"","code":"coord_affine(x, A, s = c(0, 0, 0))"},{"path":"http://antiphon.github.io/Kdirectional/reference/coord_affine.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Affine transfomration of coordinates — coord_affine","text":"x coordinates, one row per coordinate matrix s shift","code":""},{"path":"http://antiphon.github.io/Kdirectional/reference/cross.html","id":null,"dir":"Reference","previous_headings":"","what":"Cross-product of two 3D vectors — cross","title":"Cross-product of two 3D vectors — cross","text":"Cross-product two 3D vectors","code":""},{"path":"http://antiphon.github.io/Kdirectional/reference/cross.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Cross-product of two 3D vectors — cross","text":"","code":"cross(u, v)"},{"path":"http://antiphon.github.io/Kdirectional/reference/dDirectional.html","id":null,"dir":"Reference","previous_headings":"","what":"Nearest neighbour directional distribution (old version) — dDirectional","title":"Nearest neighbour directional distribution (old version) — dDirectional","text":"Estimate directional distribution Konig&Schmidt 1992 (notation) 0-nearest neighbour .e. nearest neighbour.","code":""},{"path":"http://antiphon.github.io/Kdirectional/reference/dDirectional.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Nearest neighbour directional distribution (old version) — dDirectional","text":"","code":"dDirectional(x, r, theta, epsilon, n_dir = 10)"},{"path":"http://antiphon.github.io/Kdirectional/reference/dDirectional.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Nearest neighbour directional distribution (old version) — dDirectional","text":"x point pattern, $x coords $bbox bounding box r Ranges theta Direction sector central angles, list ncol(x$x)-components. epsilon Direction sector width angles n_dir theta given, greate grid resolution.","code":""},{"path":"http://antiphon.github.io/Kdirectional/reference/dDirectional.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Nearest neighbour directional distribution (old version) — dDirectional","text":"Directions angle positive x-axis (2D) azimuth, inclination (3D).  Theta list length 1 (2D) 2 (3D) defining grid angles.","code":""},{"path":"http://antiphon.github.io/Kdirectional/reference/deg2rad.html","id":null,"dir":"Reference","previous_headings":"","what":"Degree to radian — deg2rad","title":"Degree to radian — deg2rad","text":"Degree radian","code":""},{"path":"http://antiphon.github.io/Kdirectional/reference/deg2rad.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Degree to radian — deg2rad","text":"","code":"deg2rad(deg)"},{"path":"http://antiphon.github.io/Kdirectional/reference/DFT.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute the Discrete Fourier Transform of a point pattern — DFT","title":"Compute the Discrete Fourier Transform of a point pattern — DFT","text":"2D ","code":""},{"path":"http://antiphon.github.io/Kdirectional/reference/DFT.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute the Discrete Fourier Transform of a point pattern — DFT","text":"","code":"DFT(x, m)"},{"path":"http://antiphon.github.io/Kdirectional/reference/DFT.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute the Discrete Fourier Transform of a point pattern — DFT","text":"x point pattern m maximum steps","code":""},{"path":"http://antiphon.github.io/Kdirectional/reference/DFT.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Compute the Discrete Fourier Transform of a point pattern — DFT","text":"pattern rescaled unit square.","code":""},{"path":"http://antiphon.github.io/Kdirectional/reference/directed_geom.html","id":null,"dir":"Reference","previous_headings":"","what":"Directed geometric graph — directed_geom","title":"Directed geometric graph — directed_geom","text":"Compute geometric graph $$x_i ~ x_j \\Leftrightarrow ||x_i-x_j|| < r \\& -\\theta < angle(x_j-x_i) < \\theta$$","code":""},{"path":"http://antiphon.github.io/Kdirectional/reference/directed_geom.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Directed geometric graph — directed_geom","text":"","code":"directed_geom(x, u, theta, r, from, to, double = TRUE, pregraph)"},{"path":"http://antiphon.github.io/Kdirectional/reference/directed_geom.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Directed geometric graph — directed_geom","text":"x matrix location coordinates u unit vector direction theta angle directed cone r radius neighbourhood default 1:nrow(x), indices points compute edges default 1:nrow(x), indices points account potential neighbours double use double cone, .e. look also direction -u? pregraph list--neighbour indices look potential neighbours","code":""},{"path":"http://antiphon.github.io/Kdirectional/reference/directed_geom.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Directed geometric graph — directed_geom","text":"Neighbour index vectors list.","code":""},{"path":"http://antiphon.github.io/Kdirectional/reference/directed_geom.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Directed geometric graph — directed_geom","text":"pregraph given, \"\" ignored.","code":""},{"path":"http://antiphon.github.io/Kdirectional/reference/direction.grid.html","id":null,"dir":"Reference","previous_headings":"","what":"Make a direction grid — direction.grid","title":"Make a direction grid — direction.grid","text":"Make direction grid","code":""},{"path":"http://antiphon.github.io/Kdirectional/reference/direction.grid.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make a direction grid — direction.grid","text":"","code":"direction.grid(n_dir = 2, d = 2, max = pi/2)"},{"path":"http://antiphon.github.io/Kdirectional/reference/dist_point_to_plane.html","id":null,"dir":"Reference","previous_headings":"","what":"Point to plane distance — dist_point_to_plane","title":"Point to plane distance — dist_point_to_plane","text":"Point plane distance","code":""},{"path":"http://antiphon.github.io/Kdirectional/reference/dist_point_to_plane.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Point to plane distance — dist_point_to_plane","text":"","code":"dist_point_to_plane(x, pl, absit = TRUE)"},{"path":"http://antiphon.github.io/Kdirectional/reference/draw.arc.html","id":null,"dir":"Reference","previous_headings":"","what":"Draw arc — draw.arc","title":"Draw arc — draw.arc","text":"(plotrix) Draw one arcs using classic graphics.","code":""},{"path":"http://antiphon.github.io/Kdirectional/reference/draw.arc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Draw arc — draw.arc","text":"","code":"draw.arc(   x = 1,   y = NULL,   radius = 1,   angle1 = deg1 * pi/180,   angle2 = deg2 * pi/180,   deg1 = 0,   deg2 = 45,   n = 0.05,   col = NA,   lwd = NA,   ... )"},{"path":"http://antiphon.github.io/Kdirectional/reference/draw.arc.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Draw arc — draw.arc","text":"x x coordinate center. Scalar vector. ...","code":""},{"path":"http://antiphon.github.io/Kdirectional/reference/ellipse_contrast_2d.html","id":null,"dir":"Reference","previous_headings":"","what":"Testing contrast for ellipses — ellipse_contrast_2d","title":"Testing contrast for ellipses — ellipse_contrast_2d","text":"Give confint.ellipsoid compute contrast  testing semi_a - semi_b = 0","code":""},{"path":"http://antiphon.github.io/Kdirectional/reference/ellipse_contrast_2d.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Testing contrast for ellipses — ellipse_contrast_2d","text":"","code":"ellipse_contrast_2d(els, out = TRUE, range = 1.85)"},{"path":"http://antiphon.github.io/Kdirectional/reference/ellipse_contrast_2d.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Testing contrast for ellipses — ellipse_contrast_2d","text":"outlier removal, quadratic simulations unstable. range range outlier removal. See boxplot details formula.","code":""},{"path":"http://antiphon.github.io/Kdirectional/reference/ellipse_form.html","id":null,"dir":"Reference","previous_headings":"","what":"Ellipse center and matrix from general parameter form — ellipse_form","title":"Ellipse center and matrix from general parameter form — ellipse_form","text":"Ellipse center matrix general parameter form","code":""},{"path":"http://antiphon.github.io/Kdirectional/reference/ellipse_form.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Ellipse center and matrix from general parameter form — ellipse_form","text":"","code":"ellipse_form(beta, d, check = FALSE)"},{"path":"http://antiphon.github.io/Kdirectional/reference/ellipse_form.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Ellipse center and matrix from general parameter form — ellipse_form","text":"beta OLS estimates d dimension check Check definiteness?","code":""},{"path":"http://antiphon.github.io/Kdirectional/reference/ellipse_solve_rota.html","id":null,"dir":"Reference","previous_headings":"","what":"Solve rotation and semi-axes from general transform — ellipse_solve_rota","title":"Solve rotation and semi-axes from general transform — ellipse_solve_rota","text":"Solve rotation semi-axes general transform","code":""},{"path":"http://antiphon.github.io/Kdirectional/reference/ellipse_solve_rota.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Solve rotation and semi-axes from general transform — ellipse_solve_rota","text":"","code":"ellipse_solve_rota(A, eps = 0)"},{"path":"http://antiphon.github.io/Kdirectional/reference/ellipse_solve_rota.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Solve rotation and semi-axes from general transform — ellipse_solve_rota","text":"trasformation matrix ellipsoid equation eps Inflate diagonal factor, avoid numerical problems.","code":""},{"path":"http://antiphon.github.io/Kdirectional/reference/ellipse_solve_rota.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Solve rotation and semi-axes from general transform — ellipse_solve_rota","text":"work improper , return inf long axes.","code":""},{"path":"http://antiphon.github.io/Kdirectional/reference/ellipsoid_ALS.html","id":null,"dir":"Reference","previous_headings":"","what":"ALS fitting of ellipsoid — ellipsoid_ALS","title":"ALS fitting of ellipsoid — ellipsoid_ALS","text":"Adjusted LS fitting ellipsoids, Kukush et al. 2003.","code":""},{"path":"http://antiphon.github.io/Kdirectional/reference/ellipsoid_ALS.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"ALS fitting of ellipsoid — ellipsoid_ALS","text":"","code":"ellipsoid_ALS(x, s2, ..., just_U = FALSE)"},{"path":"http://antiphon.github.io/Kdirectional/reference/ellipsoid_ALS.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"ALS fitting of ellipsoid — ellipsoid_ALS","text":"x Point locations, n x d matrix s2 Error variance, vector optimize. ... ignored just_U internal use: Return just smallest eigenvector bhat.","code":""},{"path":"http://antiphon.github.io/Kdirectional/reference/ellipsoid_ALS.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"ALS fitting of ellipsoid — ellipsoid_ALS","text":"really optimised yet. Good grid s2 optimisation something like seq(s2 * 0.1, s2, length=20) s2 OLS estimate (access via $ols_fit$s2).","code":""},{"path":"http://antiphon.github.io/Kdirectional/reference/ellipsoid_ALS.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"ALS fitting of ellipsoid — ellipsoid_ALS","text":"Kukush et al (2003): Consistent estimation implicit quadratic measurement error model, Computational Stat & Data Analysis","code":""},{"path":"http://antiphon.github.io/Kdirectional/reference/ellipsoid_contrast_3d.html","id":null,"dir":"Reference","previous_headings":"","what":"Testing contrast for ellipsoids — ellipsoid_contrast_3d","title":"Testing contrast for ellipsoids — ellipsoid_contrast_3d","text":"Give confint.ellipsoid compute contrast  testing semi_i - 0.5 * (semi_j + semi_k) = 0","code":""},{"path":"http://antiphon.github.io/Kdirectional/reference/ellipsoid_contrast_3d.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Testing contrast for ellipsoids — ellipsoid_contrast_3d","text":"","code":"ellipsoid_contrast_3d(els, ijk = c(3, 1, 2), out = TRUE, z0 = 1.85)"},{"path":"http://antiphon.github.io/Kdirectional/reference/ellipsoid_contrast_3d.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Testing contrast for ellipsoids — ellipsoid_contrast_3d","text":"@param els list ellipsoid estimates  @param ijk c(1,2,3), c(2,1,3) c(3,1,2). Default: c(3,1,2)  @param >0 Use outlier detection stabilise (useful large variances) default contrast compare third semi-axis average first two. seems best, semi-axes returned increasing order OLS-algorithm. '' used like 'coef' boxplot.stats, see details.","code":""},{"path":"http://antiphon.github.io/Kdirectional/reference/ellipsoid_from_beta.html","id":null,"dir":"Reference","previous_headings":"","what":"convert beta vector to ellipsoid object — ellipsoid_from_beta","title":"convert beta vector to ellipsoid object — ellipsoid_from_beta","text":"convert beta vector ellipsoid object","code":""},{"path":"http://antiphon.github.io/Kdirectional/reference/ellipsoid_from_beta.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"convert beta vector to ellipsoid object — ellipsoid_from_beta","text":"","code":"ellipsoid_from_beta(beta, d, ...)"},{"path":"http://antiphon.github.io/Kdirectional/reference/ellipsoid_from_beta.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"convert beta vector to ellipsoid object — ellipsoid_from_beta","text":"beta beta vector, coefficients quadratic form d dimension ... passed 'ellipse_solve_rota'","code":""},{"path":"http://antiphon.github.io/Kdirectional/reference/ellipsoid_OLS.html","id":null,"dir":"Reference","previous_headings":"","what":"Ordinary Least Squares Ellipsoid — ellipsoid_OLS","title":"Ordinary Least Squares Ellipsoid — ellipsoid_OLS","text":"OLS fitting ellipsoid d-dimensional point cloud","code":""},{"path":"http://antiphon.github.io/Kdirectional/reference/ellipsoid_OLS.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Ordinary Least Squares Ellipsoid — ellipsoid_OLS","text":"","code":"ellipsoid_OLS(x, origin = FALSE)"},{"path":"http://antiphon.github.io/Kdirectional/reference/ellipsoid_OLS.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Ordinary Least Squares Ellipsoid — ellipsoid_OLS","text":"x point coordinate matrix origin Fix center ellipsoid origin?","code":""},{"path":"http://antiphon.github.io/Kdirectional/reference/ellipsoid_OLS.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Ordinary Least Squares Ellipsoid — ellipsoid_OLS","text":"Assumes normal error model.","code":""},{"path":"http://antiphon.github.io/Kdirectional/reference/ellipsoid_shape.html","id":null,"dir":"Reference","previous_headings":"","what":"Ellipsoid shape for 3d plotting — ellipsoid_shape","title":"Ellipsoid shape for 3d plotting — ellipsoid_shape","text":"Refine icosahedron, transform","code":""},{"path":"http://antiphon.github.io/Kdirectional/reference/ellipsoid_shape.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Ellipsoid shape for 3d plotting — ellipsoid_shape","text":"","code":"ellipsoid_shape(N = 2, axes = c(1, 1, 1), R = NULL, center = c(0, 0, 0))"},{"path":"http://antiphon.github.io/Kdirectional/reference/ellipsoid_shape.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Ellipsoid shape for 3d plotting — ellipsoid_shape","text":"R Rotation matrix.","code":""},{"path":"http://antiphon.github.io/Kdirectional/reference/Euler2quaternion.html","id":null,"dir":"Reference","previous_headings":"","what":"Euler axis/angle to quaternion — Euler2quaternion","title":"Euler axis/angle to quaternion — Euler2quaternion","text":"Euler axis/angle quaternion","code":""},{"path":"http://antiphon.github.io/Kdirectional/reference/Euler2quaternion.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Euler axis/angle to quaternion — Euler2quaternion","text":"","code":"Euler2quaternion(euler)"},{"path":"http://antiphon.github.io/Kdirectional/reference/Euler2quaternion.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Euler axis/angle to quaternion — Euler2quaternion","text":"euler c(e1,e2,e3,angle) e* unit axis rotation","code":""},{"path":"http://antiphon.github.io/Kdirectional/reference/Euler2rotationMatrix.html","id":null,"dir":"Reference","previous_headings":"","what":"Euler axis-angle to Rotation matrix — Euler2rotationMatrix","title":"Euler axis-angle to Rotation matrix — Euler2rotationMatrix","text":"Euler axis-angle Rotation matrix","code":""},{"path":"http://antiphon.github.io/Kdirectional/reference/Euler2rotationMatrix.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Euler axis-angle to Rotation matrix — Euler2rotationMatrix","text":"","code":"Euler2rotationMatrix(v, proper = TRUE)"},{"path":"http://antiphon.github.io/Kdirectional/reference/EulerAngles2quaternion.html","id":null,"dir":"Reference","previous_headings":"","what":"Euler angles to quaternions — EulerAngles2quaternion","title":"Euler angles to quaternions — EulerAngles2quaternion","text":"Euler angles quaternions","code":""},{"path":"http://antiphon.github.io/Kdirectional/reference/EulerAngles2quaternion.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Euler angles to quaternions — EulerAngles2quaternion","text":"","code":"EulerAngles2quaternion(angle)"},{"path":"http://antiphon.github.io/Kdirectional/reference/EulerAngles2rotationMatrix.html","id":null,"dir":"Reference","previous_headings":"","what":"Euler angles to Rotation matrix — EulerAngles2rotationMatrix","title":"Euler angles to Rotation matrix — EulerAngles2rotationMatrix","text":"Euler angles Rotation matrix","code":""},{"path":"http://antiphon.github.io/Kdirectional/reference/EulerAngles2rotationMatrix.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Euler angles to Rotation matrix — EulerAngles2rotationMatrix","text":"","code":"EulerAngles2rotationMatrix(angle)"},{"path":"http://antiphon.github.io/Kdirectional/reference/Fest_along_axis.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute all directed F functions along axis — Fest_along_axis","title":"Compute all directed F functions along axis — Fest_along_axis","text":"Compute directed F functions along axis","code":""},{"path":"http://antiphon.github.io/Kdirectional/reference/Fest_along_axis.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute all directed F functions along axis — Fest_along_axis","text":"","code":"Fest_along_axis(x, ...)"},{"path":"http://antiphon.github.io/Kdirectional/reference/Fest_along_axis.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute all directed F functions along axis — Fest_along_axis","text":"x pp, list $x~coordinates $bbox~bounding box ... parameters except u Kest_directional","code":""},{"path":"http://antiphon.github.io/Kdirectional/reference/Fest_directional.html","id":null,"dir":"Reference","previous_headings":"","what":"Directed F, empty space function — Fest_directional","title":"Directed F, empty space function — Fest_directional","text":"use toroidal","code":""},{"path":"http://antiphon.github.io/Kdirectional/reference/Fest_directional.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Directed F, empty space function — Fest_directional","text":"","code":"Fest_directional(x, u, theta, r, n)"},{"path":"http://antiphon.github.io/Kdirectional/reference/Fest_directional.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Directed F, empty space function — Fest_directional","text":"x pp, list $x~coordinates $bbox~bounding box u unit vector direction theta angle directed cone r radius vector estimate n number uniform dummies","code":""},{"path":"http://antiphon.github.io/Kdirectional/reference/flower.pcf_directions.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot a angluar plot of the pcf_directions, 2D — flower.pcf_directions","title":"Plot a angluar plot of the pcf_directions, 2D — flower.pcf_directions","text":"Plot angluar plot pcf_directions, 2D","code":""},{"path":"http://antiphon.github.io/Kdirectional/reference/flower.pcf_directions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot a angluar plot of the pcf_directions, 2D — flower.pcf_directions","text":"","code":"flower.pcf_directions(x, scale_points = TRUE, col = rainbow, zlim, ...)"},{"path":"http://antiphon.github.io/Kdirectional/reference/fryellipsoids-class.html","id":null,"dir":"Reference","previous_headings":"","what":"Constructor — fryellipsoids-class","title":"Constructor — fryellipsoids-class","text":"Constructor","code":""},{"path":"http://antiphon.github.io/Kdirectional/reference/fry_ellipsoids.html","id":null,"dir":"Reference","previous_headings":"","what":"Fit second order intensity ellipses or ellipsoids — fry_ellipsoids","title":"Fit second order intensity ellipses or ellipsoids — fry_ellipsoids","text":"Fit second order intensity ellipses ellipsoids","code":""},{"path":"http://antiphon.github.io/Kdirectional/reference/fry_ellipsoids.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fit second order intensity ellipses or ellipsoids — fry_ellipsoids","text":"","code":"fry_ellipsoids(   x,   nvec = 1:5,   r_adjust = 1,   nangles,   eps = 0,   cylindric = FALSE,   double = FALSE,   border = TRUE,   origin = TRUE,   verbose = FALSE,   keep_data = TRUE,   double2 = FALSE,   data,   ALS = FALSE,   ... )"},{"path":"http://antiphon.github.io/Kdirectional/reference/fry_ellipsoids.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fit second order intensity ellipses or ellipsoids — fry_ellipsoids","text":"x point pattern nvec jumps consider r_adjust consider fry points length r_adjust*max(window side) nangles 3d, number refinements (def=2), 2d def=20 sectors. eps add sector angle. Results smoothing >0 (default=0). cylindric Use cylinder instead sector double use directions pair border border effects cancelled minus sampling, TRUE, \"double\" ignored. origin Constrain ellipses' centers origo. keep_data Keep data ellipsoid, inside ellipsoids? Helps averaging. data vectors fit ellipses. Default missing, compute Fry-points. ALS (false) Use ALS refine OLS fits.","code":""},{"path":"http://antiphon.github.io/Kdirectional/reference/fry_ellipsoids.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Fit second order intensity ellipses or ellipsoids — fry_ellipsoids","text":"First compute Fry-points, look Fry-points many directions  origin find kth point , fit ellipsoids kth-points.","code":""},{"path":"http://antiphon.github.io/Kdirectional/reference/fry_ellipsoids2.html","id":null,"dir":"Reference","previous_headings":"","what":"Fit second order intensity ellipses or ellipsoids — fry_ellipsoids2","title":"Fit second order intensity ellipses or ellipsoids — fry_ellipsoids2","text":"Difference v1: use pseudo-Fry true Fry.","code":""},{"path":"http://antiphon.github.io/Kdirectional/reference/fry_ellipsoids2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fit second order intensity ellipses or ellipsoids — fry_ellipsoids2","text":"","code":"fry_ellipsoids2(   x,   nvec = 1:5,   r_adjust = 1,   nangles,   eps = 0,   cylindric = FALSE,   double = FALSE,   border = TRUE,   origin = TRUE,   verbose = FALSE,   keep_data = FALSE,   data,   ... )"},{"path":"http://antiphon.github.io/Kdirectional/reference/fry_ellipsoids2.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fit second order intensity ellipses or ellipsoids — fry_ellipsoids2","text":"x point pattern nvec jumps consider r_adjust consider fry points length r_adjust*max(window side) nangles 3d, number refinements (def=2), 2d def=20 sectors. eps add sector angle. Results smoothing >0 (default=0). cylindric Use cylinder instead sector double use directions pair border border effects cancelled minus sampling, TRUE, \"double\" ignored. origin Constrain ellipses' centers origo. keep_data Keep data ellipsoid, inside ellipsoids? Helps averaging. data vectors fit ellipses. Default missing, compute Fry-points.","code":""},{"path":"http://antiphon.github.io/Kdirectional/reference/fry_orientation_density.html","id":null,"dir":"Reference","previous_headings":"","what":"Second order orientation density — fry_orientation_density","title":"Second order orientation density — fry_orientation_density","text":"Illian et al 2008, Ch. 4.5.3.","code":""},{"path":"http://antiphon.github.io/Kdirectional/reference/fry_orientation_density.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Second order orientation density — fry_orientation_density","text":"","code":"fry_orientation_density(x, r1, r2, alpha, bw = 0.35)"},{"path":"http://antiphon.github.io/Kdirectional/reference/fry_orientation_density.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Second order orientation density — fry_orientation_density","text":"x point pattern r1 lower limit ranges r2 upper limit ranges alpha angles estimate density , range [0, pi] bw Bandwidth (half-width) Epanechnicov kernel.","code":""},{"path":"http://antiphon.github.io/Kdirectional/reference/fry_points.html","id":null,"dir":"Reference","previous_headings":"","what":"Fry points — fry_points","title":"Fry points — fry_points","text":"Pairwise difference vectors x","code":""},{"path":"http://antiphon.github.io/Kdirectional/reference/fry_points.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fry points — fry_points","text":"","code":"fry_points(x, double = FALSE, border = TRUE)"},{"path":"http://antiphon.github.io/Kdirectional/reference/fry_points.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fry points — fry_points","text":"double return directions pair border border effects cancelled minus sampling, TRUE, \"double\" ignored.","code":""},{"path":"http://antiphon.github.io/Kdirectional/reference/fry_points.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fry points — fry_points","text":"Returns lengths direction unit vectors.","code":""},{"path":"http://antiphon.github.io/Kdirectional/reference/geom.html","id":null,"dir":"Reference","previous_headings":"","what":"geometric graph — geom","title":"geometric graph — geom","text":"geometric graph","code":""},{"path":"http://antiphon.github.io/Kdirectional/reference/geom.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"geometric graph — geom","text":"","code":"geom(x, from, to, r)"},{"path":"http://antiphon.github.io/Kdirectional/reference/geom.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"geometric graph — geom","text":"x matrix location coordinates default 1:nrow(x), indices compute edges default 1:nrow(x), indices account potent. neighbours r radius neighbourhood","code":""},{"path":"http://antiphon.github.io/Kdirectional/reference/Gest.html","id":null,"dir":"Reference","previous_headings":"","what":"Estimate the nearest neighbour distance distribution — Gest","title":"Estimate the nearest neighbour distance distribution — Gest","text":"Spatstat notation G","code":""},{"path":"http://antiphon.github.io/Kdirectional/reference/Gest.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Estimate the nearest neighbour distance distribution — Gest","text":"","code":"Gest(x, r)"},{"path":"http://antiphon.github.io/Kdirectional/reference/getYmult.html","id":null,"dir":"Reference","previous_headings":"","what":"Correct for aspect and coordinate ratio — getYmult","title":"Correct for aspect and coordinate ratio — getYmult","text":"plotrix","code":""},{"path":"http://antiphon.github.io/Kdirectional/reference/getYmult.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Correct for aspect and coordinate ratio — getYmult","text":"","code":"getYmult()"},{"path":"http://antiphon.github.io/Kdirectional/reference/Gsector.html","id":null,"dir":"Reference","previous_headings":"","what":"Directional Nearest neighbour distribution(old) — Gsector","title":"Directional Nearest neighbour distribution(old) — Gsector","text":"Estimate directional nearest neighbour CDF.","code":""},{"path":"http://antiphon.github.io/Kdirectional/reference/Gsector.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Directional Nearest neighbour distribution(old) — Gsector","text":"","code":"Gsector(x, r, theta, unit, directions, epsilon, n_dir = 10)"},{"path":"http://antiphon.github.io/Kdirectional/reference/Gsector.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Directional Nearest neighbour distribution(old) — Gsector","text":"x point pattern, $x coords $bbox bounding box r Ranges theta Direction sector central angles, list ncol(x$x)-components. unit Alternative theta, matrix direction vectors. epsilon Direction sector width angles n_dir theta given, greate grid resolution.","code":""},{"path":"http://antiphon.github.io/Kdirectional/reference/Gsector.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Directional Nearest neighbour distribution(old) — Gsector","text":"directed sector version G-function spatstat. Directions angle positive x-axis (2D) azimuth, inclination (3D).  Theta list length 1 (2D) 2 (3D) defining grid angles.","code":""},{"path":"http://antiphon.github.io/Kdirectional/reference/inc2lat.html","id":null,"dir":"Reference","previous_headings":"","what":"inclination to latitude — inc2lat","title":"inclination to latitude — inc2lat","text":"inclination latitude","code":""},{"path":"http://antiphon.github.io/Kdirectional/reference/inc2lat.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"inclination to latitude — inc2lat","text":"","code":"inc2lat(inc)"},{"path":"http://antiphon.github.io/Kdirectional/reference/intensity_at_points.html","id":null,"dir":"Reference","previous_headings":"","what":"Kernel Estimate Intensity at Data Points — intensity_at_points","title":"Kernel Estimate Intensity at Data Points — intensity_at_points","text":"Kernel Estimate Intensity Data Points","code":""},{"path":"http://antiphon.github.io/Kdirectional/reference/intensity_at_points.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Kernel Estimate Intensity at Data Points — intensity_at_points","text":"","code":"intensity_at_points(   x,   bw,   kernel = \"gaussian\",   border = \"local\",   normalise = FALSE,   loo = FALSE )"},{"path":"http://antiphon.github.io/Kdirectional/reference/intensity_at_points.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Kernel Estimate Intensity at Data Points — intensity_at_points","text":"x point pattern bw bandwidth. Gaussian sd=bw, Epanechnicov domain [-bw, bw]. kernel Either 'gaussian' 'epanenchnikov' (partial matching) border Border correction apply.  One 'none', 'local', 'global', 'toroidal'. normalise renormalise inverse sum = volume loo leave-one--estimate? include point estimation int()","code":""},{"path":"http://antiphon.github.io/Kdirectional/reference/intensity_at_points.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Kernel Estimate Intensity at Data Points — intensity_at_points","text":"border correction, bounding box coordinates x used,  moment works axis-aligned cuboids. kernel product one dimensional kernels, Epanechnikov many dimensions truly isotropic prefers diagonal directions.","code":""},{"path":"http://antiphon.github.io/Kdirectional/reference/intensity_bandwidth_profile.html","id":null,"dir":"Reference","previous_headings":"","what":"Find the optimal smoothing for intensity estimation kernel width — intensity_bandwidth_profile","title":"Find the optimal smoothing for intensity estimation kernel width — intensity_bandwidth_profile","text":"Find optimal smoothing intensity estimation kernel width","code":""},{"path":"http://antiphon.github.io/Kdirectional/reference/intensity_bandwidth_profile.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find the optimal smoothing for intensity estimation kernel width — intensity_bandwidth_profile","text":"","code":"intensity_bandwidth_profile(x, bw_vector, kernel = \"gaussian\", ...)"},{"path":"http://antiphon.github.io/Kdirectional/reference/intensity_bandwidth_profile.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find the optimal smoothing for intensity estimation kernel width — intensity_bandwidth_profile","text":"x point pattern bw_vector Vector bandwidth values optimize kernel Either 'gaussian' 'epanenchnikov' ... ignored.","code":""},{"path":"http://antiphon.github.io/Kdirectional/reference/intensity_bandwidth_profile.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find the optimal smoothing for intensity estimation kernel width — intensity_bandwidth_profile","text":"list elements: * opt: optimal bandwidth, given inputs * iopt: index optimal bandwidth input vector * loss: squared loss function (given ) * statistic: statistic root found * area: window area |W| used optimisation.","code":""},{"path":"http://antiphon.github.io/Kdirectional/reference/intensity_bandwidth_profile.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Find the optimal smoothing for intensity estimation kernel width — intensity_bandwidth_profile","text":"Optimize bandwidth $h$ using Cronie & van Lieshout method [1]. short, optimise loss function $$latex$$ kernel intensity estimator. See Reference paper. Note: optimisation done without border correction without leave-one-, suggested [1].","code":""},{"path":"http://antiphon.github.io/Kdirectional/reference/intensity_bandwidth_profile.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Find the optimal smoothing for intensity estimation kernel width — intensity_bandwidth_profile","text":"1. Cronie O, van Lieshout MNM. Bandwidth selection kernel estimators spatial intensity function.  2016;1-20. Available : http://arxiv.org/abs/1611.10221","code":""},{"path":"http://antiphon.github.io/Kdirectional/reference/intensity_somewhere.html","id":null,"dir":"Reference","previous_headings":"","what":"Kernel Estimate Intensity at non-Data locations — intensity_somewhere","title":"Kernel Estimate Intensity at non-Data locations — intensity_somewhere","text":"Kernel Estimate Intensity non-Data locations","code":""},{"path":"http://antiphon.github.io/Kdirectional/reference/intensity_somewhere.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Kernel Estimate Intensity at non-Data locations — intensity_somewhere","text":"","code":"intensity_somewhere(x, loc, bw, kernel = \"gaussian\", border = \"local\")"},{"path":"http://antiphon.github.io/Kdirectional/reference/intensity_somewhere.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Kernel Estimate Intensity at non-Data locations — intensity_somewhere","text":"x point pattern loc coordinate matrix non-data locations estimate intensity. bw bandwidth. Gaussian sd=bw, Epanechnicov domain [-bw, bw]. kernel Either 'gaussian' 'epanenchnikov' border Border correction apply.  One 'none', 'local', 'global', 'toroidal'. normalise renormalise inverse sum = volume loo leave-one--estimate?","code":""},{"path":"http://antiphon.github.io/Kdirectional/reference/intensity_somewhere.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Kernel Estimate Intensity at non-Data locations — intensity_somewhere","text":"border correction, bounding box coordinates x used,  moment works axis-aligned cuboids. kernel product one dimensional kernels, Epanechnikov many dimensions truly isotropic prefers diagonal directions.","code":""},{"path":"http://antiphon.github.io/Kdirectional/reference/is.bbpoly.html","id":null,"dir":"Reference","previous_headings":"","what":"check class bbpoly — is.bbpoly","title":"check class bbpoly — is.bbpoly","text":"check class bbpoly","code":""},{"path":"http://antiphon.github.io/Kdirectional/reference/is.bbpoly.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"check class bbpoly — is.bbpoly","text":"","code":"is.bbpoly(x, ...)"},{"path":"http://antiphon.github.io/Kdirectional/reference/is.bbquad.html","id":null,"dir":"Reference","previous_headings":"","what":"check class bbquad — is.bbquad","title":"check class bbquad — is.bbquad","text":"check class bbquad","code":""},{"path":"http://antiphon.github.io/Kdirectional/reference/is.bbquad.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"check class bbquad — is.bbquad","text":"","code":"is.bbquad(x, ...)"},{"path":"http://antiphon.github.io/Kdirectional/reference/Kdirectional.html","id":null,"dir":"Reference","previous_headings":"","what":"Some tools for analysing the isotropy of spatial point patterns — Kdirectional","title":"Some tools for analysing the isotropy of spatial point patterns — Kdirectional","text":"See vignette example.","code":""},{"path":"http://antiphon.github.io/Kdirectional/reference/Kdirectional.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Some tools for analysing the isotropy of spatial point patterns — Kdirectional","text":"","code":"if (FALSE) { vignette(\"anisotropy-example\") }"},{"path":"http://antiphon.github.io/Kdirectional/reference/Kest_along_axis.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute all directed K functions along axis — Kest_along_axis","title":"Compute all directed K functions along axis — Kest_along_axis","text":"Compute directed K functions along axis","code":""},{"path":"http://antiphon.github.io/Kdirectional/reference/Kest_along_axis.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute all directed K functions along axis — Kest_along_axis","text":"","code":"Kest_along_axis(x, ...)"},{"path":"http://antiphon.github.io/Kdirectional/reference/Kest_along_axis.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute all directed K functions along axis — Kest_along_axis","text":"x pp, list $x~coordinates $bbox~bounding box ... parameters except u Kest_directional","code":""},{"path":"http://antiphon.github.io/Kdirectional/reference/Kest_anin.html","id":null,"dir":"Reference","previous_headings":"","what":"Anisotropic and Inhomogeneous K function — Kest_anin","title":"Anisotropic and Inhomogeneous K function — Kest_anin","text":"Estimate Sector-K function second order reweighted (\"inhomogeneous\") pattern.","code":""},{"path":"http://antiphon.github.io/Kdirectional/reference/Kest_anin.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Anisotropic and Inhomogeneous K function — Kest_anin","text":"","code":"Kest_anin(   x,   u,   epsilon,   r,   lambda = NULL,   lambda_h,   renormalise = TRUE,   border = 1,   ... )"},{"path":"http://antiphon.github.io/Kdirectional/reference/Kest_anin.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Anisotropic and Inhomogeneous K function — Kest_anin","text":"x pp, list $x~coordinates $bbox~bounding box u unit vector(s) direction, row vectors. Default: x y axes, viz. c(1,0) c(0,1). epsilon Central half angle directed sector/cone (total angle rotation cone 2*epsilon). Default: pi/4. r radius vector evaluate K lambda optional vector intensity estimates points lambda_h lambda missing, use bandwidth kernel estimate lambda(x) renormalise See details. border Use border correction? Default=1, yes. ... passed e.g. intensity_at_points","code":""},{"path":"http://antiphon.github.io/Kdirectional/reference/Kest_anin.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Anisotropic and Inhomogeneous K function — Kest_anin","text":"Returns dataframe.","code":""},{"path":"http://antiphon.github.io/Kdirectional/reference/Kest_anin.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Anisotropic and Inhomogeneous K function — Kest_anin","text":"Computes second order reweighted version Sector-K. short, count many pairs points pattern  ) difference vector's angle less 'epsilon' radians direction 'u'  b) difference vector length less range r. Usually r vector output vector well. estimate intensity Lambda(x) points can given ('lambda'). single value, pattern assumed homogeneous.  vector length points, pattern taken second-order stationary. case  sum pairs (,j) weighted 1/(lambda[]*lambda[j]). 'lambda' missing, 'lambda_h', single positive number,  given, used estimating non-constant Lambda(x) via Epanechnikov kernel smoothing (see intensity_at_points). 'renormalise=TRUE', normalise intensity estimate sum(1/lambda(x))=|W|. corresponds spatstat's Kinhom setting 'normpower=2'. border correction: x$bbox simple bounding box, algorithm uses translation corrected weighting 1/area(Wx intersect Wy) Wx=W+x. x$bbox bbquad-object, example rotated polygon, algorithm uses simple minus border correction.","code":""},{"path":"http://antiphon.github.io/Kdirectional/reference/Kest_anin_cylinder.html","id":null,"dir":"Reference","previous_headings":"","what":"Anisotropic and Inhomogeneous K function, cylinder version — Kest_anin_cylinder","title":"Anisotropic and Inhomogeneous K function, cylinder version — Kest_anin_cylinder","text":"Estimate cylinder-K function second order reweighted (\"inhomogeneous\") pattern.","code":""},{"path":"http://antiphon.github.io/Kdirectional/reference/Kest_anin_cylinder.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Anisotropic and Inhomogeneous K function, cylinder version — Kest_anin_cylinder","text":"","code":"Kest_anin_cylinder(   x,   u,   epsilon,   r,   lambda = NULL,   lambda_h,   renormalise = TRUE,   border = 1,   aspect = 1/3,   ... )"},{"path":"http://antiphon.github.io/Kdirectional/reference/Kest_anin_cylinder.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Anisotropic and Inhomogeneous K function, cylinder version — Kest_anin_cylinder","text":"x pp, list $x~coordinates $bbox~bounding box u unit vector(s) direction, row vectors. Default: x y axes, viz. c(1,0) c(0,1). epsilon cylinder half-width. extended length r, can given per r. r radius vector evaluate K lambda optional vector intensity estimates points lambda_h lambda missing, use bandwidth kernel estimate lambda(x) renormalise See details. border Use border correction? Default=1, yes. aspect Instead using fixed halfwidth (epsilon) take halfwidth 'aspect * r/2' (increasing vector). Default : 1/3 ... passed e.g. intensity_at_points","code":""},{"path":"http://antiphon.github.io/Kdirectional/reference/Kest_anin_cylinder.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Anisotropic and Inhomogeneous K function, cylinder version — Kest_anin_cylinder","text":"Returns dataframe.","code":""},{"path":"http://antiphon.github.io/Kdirectional/reference/Kest_anin_cylinder.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Anisotropic and Inhomogeneous K function, cylinder version — Kest_anin_cylinder","text":"Computes second order reweighted version cylinder-K. short, count many pairs points pattern  ) difference vector inside cylinder major-axial direction 'u' radius epsilon,   b) difference vector length less range r. Usually r vector output vector well. Note default behaviour use fixed aspect ratio cylinder aspect = 2*epsilon/range = 1/3. estimate intensity Lambda(x) points can given ('lambda'). single value, pattern assumed homogeneous.  vector length points, pattern taken second-order stationary. case  sum pairs (,j) weighted 1/(lambda[]*lambda[j]). 'lambda' missing, 'lambda_h', single positive number,  given, used estimating non-constant Lambda(x) via Epanechnikov kernel smoothing (see intensity_at_points). 'renormalise=TRUE', normalise intensity estimate sum(1/lambda(x))=|W|. corresponds spatstat's Kinhom setting 'normpower=2'. border correction: x$bbox simple bounding box, algorithm uses translation corrected weighting 1/area(Wx intersect Wy) Wx=W+x. x$bbox bbquad-object, example rotated polygon, algorithm uses simple minus border correction.","code":""},{"path":"http://antiphon.github.io/Kdirectional/reference/Kest_directional.html","id":null,"dir":"Reference","previous_headings":"","what":"Directed K function — Kest_directional","title":"Directed K function — Kest_directional","text":"use translation edge correction axis-oriented bounding box. Otherwise minus-correction.","code":""},{"path":"http://antiphon.github.io/Kdirectional/reference/Kest_directional.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Directed K function — Kest_directional","text":"","code":"Kest_directional(x, u, epsilon, r, ..., cylindrical = FALSE)"},{"path":"http://antiphon.github.io/Kdirectional/reference/Kest_directional.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Directed K function — Kest_directional","text":"x pp, spatstat's ppp-object, coordinate matrix, list $x~coordinates $bbox~bounding box u unit direction(s), many one direction per row. epsilon Central angle directed cone (total angle 2 epsilon) r radius vector evaluate K ... Passed Kest_anin cylindrical TRUE, compute cylindrical version using Kest_anin_cylinder","code":""},{"path":"http://antiphon.github.io/Kdirectional/reference/Kest_directional.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Directed K function — Kest_directional","text":"Returns dataframe.","code":""},{"path":"http://antiphon.github.io/Kdirectional/reference/Kest_directional.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Directed K function — Kest_directional","text":"Compute sector/cone/cylindrical K function. version uses general anisotropic-inhomonogeneous Kest_anin Kest_anin_cylinder, setting intensity = constant.","code":""},{"path":"http://antiphon.github.io/Kdirectional/reference/Kest_directional.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Directed K function — Kest_directional","text":"","code":"x <- matrix(runif(200), ncol=2) k <- Kest_directional(x) plot(k, rmax = 0.1)"},{"path":"http://antiphon.github.io/Kdirectional/reference/Kest_directional_old.html","id":null,"dir":"Reference","previous_headings":"","what":"Directed K function, old and slow — Kest_directional_old","title":"Directed K function, old and slow — Kest_directional_old","text":"use translation edge correction.","code":""},{"path":"http://antiphon.github.io/Kdirectional/reference/Kest_directional_old.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Directed K function, old and slow — Kest_directional_old","text":"","code":"Kest_directional_old(x, u, epsilon, r, pregraph)"},{"path":"http://antiphon.github.io/Kdirectional/reference/Kest_directional_old.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Directed K function, old and slow — Kest_directional_old","text":"x pp, list $x~coordinates $bbox~bounding box u unit vector direction epsilon Central angle directed cone (total angle 2 epsilon) r radius vector evaluate K pregraph super graph determining neighbourhoods","code":""},{"path":"http://antiphon.github.io/Kdirectional/reference/Kest_directional_old.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Directed K function, old and slow — Kest_directional_old","text":"Returns dataframe.","code":""},{"path":"http://antiphon.github.io/Kdirectional/reference/Kest_directional_old.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Directed K function, old and slow — Kest_directional_old","text":"Compute sector K function. Try Kest_anin bit better version also second order inhomogeneous patterns.","code":""},{"path":"http://antiphon.github.io/Kdirectional/reference/Kest_gaussian.html","id":null,"dir":"Reference","previous_headings":"","what":"Gaussian Weighted Sum of Pairwise Vectors — Kest_gaussian","title":"Gaussian Weighted Sum of Pairwise Vectors — Kest_gaussian","text":"Estimate K function -type summary second order reweighted (\"inhomogeneous\") pattern using Gaussian kernel sitting origin Fry-plot.","code":""},{"path":"http://antiphon.github.io/Kdirectional/reference/Kest_gaussian.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Gaussian Weighted Sum of Pairwise Vectors — Kest_gaussian","text":"","code":"Kest_gaussian(   x,   u,   kappa,   r,   lambda = NULL,   lambda_h,   renormalise = TRUE,   border = 1,   ... )"},{"path":"http://antiphon.github.io/Kdirectional/reference/Kest_gaussian.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Gaussian Weighted Sum of Pairwise Vectors — Kest_gaussian","text":"x pp, list $x~coordinates $bbox~bounding box u unit vector(s) direction, row vectors. Default: x y axes, viz. c(1,0) c(0,1). gives major axis ellipsoid (direction largest variance Gaussian density). kappa ratio secondary axis main axis going along 'u'. r radius vector evaluate. Corresponds radii 95% quantile x-axis, rotation directions u. lambda optional vector intensity estimates points lambda_h lambda missing, use bandwidth kernel estimate lambda(x) renormalise See details. border Use border correction? Default=1, yes. moment version available! ... passed e.g. intensity_at_points","code":""},{"path":"http://antiphon.github.io/Kdirectional/reference/Kest_gaussian.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Gaussian Weighted Sum of Pairwise Vectors — Kest_gaussian","text":"Returns dataframe.","code":""},{"path":"http://antiphon.github.io/Kdirectional/reference/Kest_gaussian.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Gaussian Weighted Sum of Pairwise Vectors — Kest_gaussian","text":"TODO Gaussian kernel sitting fry-space, sum fry-points.","code":""},{"path":"http://antiphon.github.io/Kdirectional/reference/knnangle.html","id":null,"dir":"Reference","previous_headings":"","what":"k-th nearest neighbour angles and distances — knnangle","title":"k-th nearest neighbour angles and distances — knnangle","text":"k-th nearest neighbour angles distances","code":""},{"path":"http://antiphon.github.io/Kdirectional/reference/knnangle.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"k-th nearest neighbour angles and distances — knnangle","text":"","code":"knnangle(x, k = 1, from, to)"},{"path":"http://antiphon.github.io/Kdirectional/reference/knnangle.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"k-th nearest neighbour angles and distances — knnangle","text":"x Matrix coordinates, n rows d columns k k-th nearest neighbour indices (default 1,...,nrow(x)) indices (default )","code":""},{"path":"http://antiphon.github.io/Kdirectional/reference/knnangle.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"k-th nearest neighbour angles and distances — knnangle","text":"values 2d (azimuth, distance) values 3d physical coordinate system (azimuth, inclination, distance)","code":""},{"path":"http://antiphon.github.io/Kdirectional/reference/knnangle.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"k-th nearest neighbour angles and distances — knnangle","text":"2d, returns angle [-pi, pi]. 3d also angle xy-plane [0,pi]","code":""},{"path":"http://antiphon.github.io/Kdirectional/reference/ks.test2.html","id":null,"dir":"Reference","previous_headings":"","what":"Kolmogorov-Smirnov test using ecdf's — ks.test2","title":"Kolmogorov-Smirnov test using ecdf's — ks.test2","text":"Kolmogorov-Smirnov test using ecdf's","code":""},{"path":"http://antiphon.github.io/Kdirectional/reference/ks.test2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Kolmogorov-Smirnov test using ecdf's — ks.test2","text":"","code":"ks.test2(x, y, n)"},{"path":"http://antiphon.github.io/Kdirectional/reference/ks.test2.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Kolmogorov-Smirnov test using ecdf's — ks.test2","text":"x empirical cdf function, see details y theoretical cdf function n Number 'datapoints'","code":""},{"path":"http://antiphon.github.io/Kdirectional/reference/lat2inc.html","id":null,"dir":"Reference","previous_headings":"","what":"latitude to inclination — lat2inc","title":"latitude to inclination — lat2inc","text":"latitude inclination","code":""},{"path":"http://antiphon.github.io/Kdirectional/reference/lat2inc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"latitude to inclination — lat2inc","text":"","code":"lat2inc(lat)"},{"path":"http://antiphon.github.io/Kdirectional/reference/lines.anisotropyprofile.html","id":null,"dir":"Reference","previous_headings":"","what":"Lines method for ","title":"Lines method for ","text":"Lines method \"anisotropyprofile\"","code":""},{"path":"http://antiphon.github.io/Kdirectional/reference/lines.anisotropyprofile.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Lines method for ","text":"","code":"# S3 method for anisotropyprofile lines(x, ..., scale = TRUE)"},{"path":"http://antiphon.github.io/Kdirectional/reference/ll2ai.html","id":null,"dir":"Reference","previous_headings":"","what":"latlon to aziinc — ll2ai","title":"latlon to aziinc — ll2ai","text":"latlon aziinc","code":""},{"path":"http://antiphon.github.io/Kdirectional/reference/ll2ai.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"latlon to aziinc — ll2ai","text":"","code":"ll2ai(latlon)"},{"path":"http://antiphon.github.io/Kdirectional/reference/ll2xyz.html","id":null,"dir":"Reference","previous_headings":"","what":"latlon to 3d coordinates — ll2xyz","title":"latlon to 3d coordinates — ll2xyz","text":"latlon 3d coordinates","code":""},{"path":"http://antiphon.github.io/Kdirectional/reference/ll2xyz.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"latlon to 3d coordinates — ll2xyz","text":"","code":"ll2xyz(latlon)"},{"path":"http://antiphon.github.io/Kdirectional/reference/lon2azi.html","id":null,"dir":"Reference","previous_headings":"","what":"longitude to azimuth — lon2azi","title":"longitude to azimuth — lon2azi","text":"longitude azimuth","code":""},{"path":"http://antiphon.github.io/Kdirectional/reference/lon2azi.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"longitude to azimuth — lon2azi","text":"","code":"lon2azi(lon)"},{"path":"http://antiphon.github.io/Kdirectional/reference/markcorr_anin.html","id":null,"dir":"Reference","previous_headings":"","what":"Inhomogeneous anisotropic mark-correlation function, sector version — markcorr_anin","title":"Inhomogeneous anisotropic mark-correlation function, sector version — markcorr_anin","text":"Estimate sector-mark correlation function second order reweighted \"inhomogeneous\" pattern.","code":""},{"path":"http://antiphon.github.io/Kdirectional/reference/markcorr_anin.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Inhomogeneous anisotropic mark-correlation function, sector version — markcorr_anin","text":"","code":"markcorr_anin(   x,   marks,   u,   epsilon,   r,   lambda = NULL,   lambda_h,   f = function(a, b) a * b,   r_h,   stoyan = 0.15,   renormalise = TRUE,   bootsize = 1e+05,   normaliser = NULL,   border = 1,   divisor = \"d\",   ... )"},{"path":"http://antiphon.github.io/Kdirectional/reference/markcorr_anin.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Inhomogeneous anisotropic mark-correlation function, sector version — markcorr_anin","text":"x pp, list $x~coordinates $bbox~bounding box marks x marked (x$marks empty), use marks u unit vector(s) direction, row vectors. Default: x y axis. epsilon Central half angle directed sector/cone (total angle rotation cone 2*epsilon) r radius vector evaluate lambda optional vector intensity estimates points lambda_h lambda missing, use bandwidth kernel estimate lambda(x) f test function form function(m1, m2) ..., returning vector length(m1). default: m1*m2 r_h smoothing range dimension, epanechnikov kernel stoyan r_h given, use r_h=stoyan/lambda^(1/dim). 'stoyan' spatstat's pcf. renormalise See details. bootsize bootstrap size estimating normaliser given. normaliser normalising constant independent marking. NULL, estimated bootstrap. border Use translation correction? Default=1, yes. cuboidal windows. divisor either \"d\" \"r\". Divide dist(,j) (\"d\") instead r (\"r\")? ... passed e.g. intensity_at_points","code":""},{"path":"http://antiphon.github.io/Kdirectional/reference/markcorr_anin.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Inhomogeneous anisotropic mark-correlation function, sector version — markcorr_anin","text":"Returns dataframe.","code":""},{"path":"http://antiphon.github.io/Kdirectional/reference/markcorr_anin.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Inhomogeneous anisotropic mark-correlation function, sector version — markcorr_anin","text":"Computes second order reweighted version mark correlation function. lambda(x) points can given,  else estimated using Epanechnikov kernel smoothing. See 'renormalise=TRUE', normalise lambda estimate sum(1/lambda(x))=|W|. corresponds spatstat's Kinhom setting 'normpower=2'.","code":""},{"path":"http://antiphon.github.io/Kdirectional/reference/markcorr_anisotropic.html","id":null,"dir":"Reference","previous_headings":"","what":"Anisotropic mark correlation function, direction vector formulation — markcorr_anisotropic","title":"Anisotropic mark correlation function, direction vector formulation — markcorr_anisotropic","text":"Estimate anisotropic mark correlation function (2d 3d), defined Stoyan 1991, f. 5.4. (without additional ''-marks)","code":""},{"path":"http://antiphon.github.io/Kdirectional/reference/markcorr_anisotropic.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Anisotropic mark correlation function, direction vector formulation — markcorr_anisotropic","text":"","code":"markcorr_anisotropic(   x,   marks = NULL,   r,   f = function(a, b) a * b,   directions,   bw,   adjust = c(1, 1),   correction = \"translation\",   bootsize = 1e+05,   divisor = \"d\",   normaliser = NULL )"},{"path":"http://antiphon.github.io/Kdirectional/reference/markcorr_anisotropic.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Anisotropic mark correlation function, direction vector formulation — markcorr_anisotropic","text":"x pp, list $x~coordinates $bbox~bounding box marks x marked (x$marks empty), use marks r Evaluate lengths. f test function form function(m1, m2) ..., returning vector length(m1) directions Matrix directions, unit vectors, one direction per row. Default: along axes. bw Bandwidths epanechnicov kernels. Vector two values, one ranges one angles. adjust bw given, use bw=adjust[1]*0.15/lambda^(1/dim) range bw=adjust[2]*0.15*pi angle correction \"none\" \"translation\". Translation rectangular box. bootsize bootstrap size estimating normaliser given. divisor either \"d\" \"r\". Divide dist(,j) (\"d\") instead r (\"r\")? normaliser normalising constant independent marking. NULL, estimated bootstrap.","code":""},{"path":"http://antiphon.github.io/Kdirectional/reference/markcorr_anisotropic.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Anisotropic mark correlation function, direction vector formulation — markcorr_anisotropic","text":"Default bandwidth: bw=adjust*0.15/lambda^(1/dim) range bw=adjust*0.15*pi angle.","code":""},{"path":"http://antiphon.github.io/Kdirectional/reference/mean_ellipse.html","id":null,"dir":"Reference","previous_headings":"","what":"Mean of ellipses — mean_ellipse","title":"Mean of ellipses — mean_ellipse","text":"2D ellipsoid averaging.","code":""},{"path":"http://antiphon.github.io/Kdirectional/reference/mean_ellipse.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Mean of ellipses — mean_ellipse","text":"","code":"mean_ellipse(x, weight, ...)"},{"path":"http://antiphon.github.io/Kdirectional/reference/mean_ellipse.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Mean of ellipses — mean_ellipse","text":"x list ellipses (2d) weight weighted average weights","code":""},{"path":"http://antiphon.github.io/Kdirectional/reference/mean_ellipsoids.html","id":null,"dir":"Reference","previous_headings":"","what":"Mean ellipsoid using empirical mean — mean_ellipsoids","title":"Mean ellipsoid using empirical mean — mean_ellipsoids","text":"sample size proportional estimates s2 (available)","code":""},{"path":"http://antiphon.github.io/Kdirectional/reference/mean_ellipsoids.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Mean ellipsoid using empirical mean — mean_ellipsoids","text":"","code":"mean_ellipsoids(   x,   nsim = 1000,   weight,   just_rotation = FALSE,   add_noise = FALSE,   keep_data = FALSE,   ... )"},{"path":"http://antiphon.github.io/Kdirectional/reference/mean_ellipsoids.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Mean ellipsoid using empirical mean — mean_ellipsoids","text":"x list ellipsoids nsim Total number points simulate ellipsoids average estimation weight Weigth ellipsoid samples. Default use standard deviation OLS estimates (available). just_rotation Rescale ellipse determinant? add_noise Simulate noise using s2 ols estimate?","code":""},{"path":"http://antiphon.github.io/Kdirectional/reference/mean_rotation_quat.html","id":null,"dir":"Reference","previous_headings":"","what":"Mean ellipsoid rotation using quarternion average — mean_rotation_quat","title":"Mean ellipsoid rotation using quarternion average — mean_rotation_quat","text":"Mean ellipsoid rotation using quarternion average","code":""},{"path":"http://antiphon.github.io/Kdirectional/reference/mean_rotation_quat.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Mean ellipsoid rotation using quarternion average — mean_rotation_quat","text":"","code":"mean_rotation_quat(x, ...)"},{"path":"http://antiphon.github.io/Kdirectional/reference/mean_rotation_quat.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Mean ellipsoid rotation using quarternion average — mean_rotation_quat","text":"x list ellipsoids ... ignored","code":""},{"path":"http://antiphon.github.io/Kdirectional/reference/mean_rotation_quat.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Mean ellipsoid rotation using quarternion average — mean_rotation_quat","text":"Average quarternion space","code":""},{"path":"http://antiphon.github.io/Kdirectional/reference/nnangle.html","id":null,"dir":"Reference","previous_headings":"","what":"nearest neighbour angles and distances — nnangle","title":"nearest neighbour angles and distances — nnangle","text":"nearest neighbour angles distances","code":""},{"path":"http://antiphon.github.io/Kdirectional/reference/nnangle.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"nearest neighbour angles and distances — nnangle","text":"","code":"nnangle(x, from, to)"},{"path":"http://antiphon.github.io/Kdirectional/reference/nnangle.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"nearest neighbour angles and distances — nnangle","text":"x Matrix coordinates, n rows d columns","code":""},{"path":"http://antiphon.github.io/Kdirectional/reference/nnangle.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"nearest neighbour angles and distances — nnangle","text":"values 2d (azimuth, distance). values 3d physical coordinate system (azimuth, inclination, distance)","code":""},{"path":"http://antiphon.github.io/Kdirectional/reference/nnangle.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"nearest neighbour angles and distances — nnangle","text":"2d, returns angle [-pi,pi]. 3d also angle xy-plane [0,pi]","code":""},{"path":"http://antiphon.github.io/Kdirectional/reference/nnangle.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"nearest neighbour angles and distances — nnangle","text":"","code":"x <- matrix(runif(200), ncol = 2) nn <- nnangle(x) summary(nn) #> Angle [0, 2pi], observed [0.07293,6.17581] #> Distance, observed [0.00418,0.13651] #>  #> Kolmogorov-Smirnov test against uniformity: #> D= 0.04642534  p= 0.9823627"},{"path":"http://antiphon.github.io/Kdirectional/reference/nnangle_cone.html","id":null,"dir":"Reference","previous_headings":"","what":"nearest neighbour angles and distances given that angles are in a cone — nnangle_cone","title":"nearest neighbour angles and distances given that angles are in a cone — nnangle_cone","text":"nearest neighbour angles distances given angles cone","code":""},{"path":"http://antiphon.github.io/Kdirectional/reference/nnangle_cone.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"nearest neighbour angles and distances given that angles are in a cone — nnangle_cone","text":"","code":"nnangle_cone(x, unit, theta, from, to, antipodal = FALSE)"},{"path":"http://antiphon.github.io/Kdirectional/reference/nnangle_cone.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"nearest neighbour angles and distances given that angles are in a cone — nnangle_cone","text":"x matrix coordinates unit direction cone theta angle width cone indices compute indices look nearest neighbour antipodal use antipodally symmetric vectors? default: FALSE values 2d (azimuth, distance). values 3d physical coordinate system (azimuth, inclination, distance) angle inside cone. NA neighbour found.","code":""},{"path":"http://antiphon.github.io/Kdirectional/reference/nn_directional_angle_distribution.html","id":null,"dir":"Reference","previous_headings":"","what":"Nearest neighbour directional distribution (new version) — nn_directional_angle_distribution","title":"Nearest neighbour directional distribution (new version) — nn_directional_angle_distribution","text":"Estimate directional distribution Konig&Schmidt 1992 (notation) 0-nearest neighbour .e. nearest neighbour, direction set conical wedge unit-sphere.","code":""},{"path":"http://antiphon.github.io/Kdirectional/reference/nn_directional_angle_distribution.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Nearest neighbour directional distribution (new version) — nn_directional_angle_distribution","text":"","code":"nn_directional_angle_distribution(x, direction, epsilon, r, antipodal = FALSE)"},{"path":"http://antiphon.github.io/Kdirectional/reference/nn_directional_angle_distribution.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Nearest neighbour directional distribution (new version) — nn_directional_angle_distribution","text":"x point pattern, $x coords $bbox bounding box direction Unit vector direction epsilon Direction sector's opening half-angle vector. r Maximum range nn-distances consider. missing, use max(nn-distances) antipodal Make nn-vectors antipodally symmetric?","code":""},{"path":"http://antiphon.github.io/Kdirectional/reference/nn_directional_angle_distribution.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Nearest neighbour directional distribution (new version) — nn_directional_angle_distribution","text":"Compute probability nearest neighbour typical point direction cone given distance less r. Input one direction many epsilons equal amount directions epsilons. using double cone.","code":""},{"path":"http://antiphon.github.io/Kdirectional/reference/nn_directional_distance_distribution.html","id":null,"dir":"Reference","previous_headings":"","what":"Directional nearest neighbour distribution — nn_directional_distance_distribution","title":"Directional nearest neighbour distribution — nn_directional_distance_distribution","text":"Global/local directed nearest neighbour distance distribution, conical wedge defining direction set.","code":""},{"path":"http://antiphon.github.io/Kdirectional/reference/nn_directional_distance_distribution.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Directional nearest neighbour distribution — nn_directional_distance_distribution","text":"","code":"nn_directional_distance_distribution(   x,   r,   direction,   epsilon,   type = \"local\",   antipodal = TRUE )"},{"path":"http://antiphon.github.io/Kdirectional/reference/nn_directional_distance_distribution.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Directional nearest neighbour distribution — nn_directional_distance_distribution","text":"x point pattern r ranges consider, increasing vector direction unit vector(s) directions cones epsilon Cone central half-angle type \"global\" \"local\" (default). antipodal Use antipodal symmetry (=double cone)? Default: FALSE","code":""},{"path":"http://antiphon.github.io/Kdirectional/reference/nn_directional_distance_distribution_global.html","id":null,"dir":"Reference","previous_headings":"","what":"Directional nearest neighbour distribution, global version — nn_directional_distance_distribution_global","title":"Directional nearest neighbour distribution, global version — nn_directional_distance_distribution_global","text":"Directional nearest neighbour distribution, global version","code":""},{"path":"http://antiphon.github.io/Kdirectional/reference/nn_directional_distance_distribution_global.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Directional nearest neighbour distribution, global version — nn_directional_distance_distribution_global","text":"","code":"nn_directional_distance_distribution_global(x, u, epsilon, r, antipodal)"},{"path":"http://antiphon.github.io/Kdirectional/reference/nn_directional_distance_distribution_global.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Directional nearest neighbour distribution, global version — nn_directional_distance_distribution_global","text":"Called 'nn_directional_distance_distribution' function.","code":""},{"path":"http://antiphon.github.io/Kdirectional/reference/nn_directional_distance_distribution_local.html","id":null,"dir":"Reference","previous_headings":"","what":"Directional nearest neighbour distribution, local version — nn_directional_distance_distribution_local","title":"Directional nearest neighbour distribution, local version — nn_directional_distance_distribution_local","text":"Directional nearest neighbour distribution, local version","code":""},{"path":"http://antiphon.github.io/Kdirectional/reference/nn_directional_distance_distribution_local.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Directional nearest neighbour distribution, local version — nn_directional_distance_distribution_local","text":"","code":"nn_directional_distance_distribution_local(x, u, epsilon, r, antipodal)"},{"path":"http://antiphon.github.io/Kdirectional/reference/nn_directional_distance_distribution_local.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Directional nearest neighbour distribution, local version — nn_directional_distance_distribution_local","text":"Called 'nn_directional_distance_distribution' function.","code":""},{"path":"http://antiphon.github.io/Kdirectional/reference/nn_orientation_density.html","id":null,"dir":"Reference","previous_headings":"","what":"Nearest neighbour angle density — nn_orientation_density","title":"Nearest neighbour angle density — nn_orientation_density","text":"2D .","code":""},{"path":"http://antiphon.github.io/Kdirectional/reference/nn_orientation_density.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Nearest neighbour angle density — nn_orientation_density","text":"","code":"nn_orientation_density(   x,   bw = 0.35,   antipodal = TRUE,   avec,   ...,   data,   justData = FALSE )"},{"path":"http://antiphon.github.io/Kdirectional/reference/nn_orientation_density.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Nearest neighbour angle density — nn_orientation_density","text":"x point pattern bw Epanechnikov kernel bandwidth antipodal Work angles 0 - pi range? false, work 0 - 2*pi. avec vector angles estimate density ... ignored data alternative x (expert use ) justData Just return components calculation?","code":""},{"path":"http://antiphon.github.io/Kdirectional/reference/osK.html","id":null,"dir":"Reference","previous_headings":"","what":"Ohser-Stoyan K-function — osK","title":"Ohser-Stoyan K-function — osK","text":"Ohser-Stoyan K-function","code":""},{"path":"http://antiphon.github.io/Kdirectional/reference/osK.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Ohser-Stoyan K-function — osK","text":"","code":"osK(x, r, theta, ...)"},{"path":"http://antiphon.github.io/Kdirectional/reference/osK.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Ohser-Stoyan K-function — osK","text":"x point pattern, $x $bbox r vector ranges theta vector angles. list two components 3D","code":""},{"path":"http://antiphon.github.io/Kdirectional/reference/owin_to_bbox.html","id":null,"dir":"Reference","previous_headings":"","what":"Turn spatstat window object to bbox — owin_to_bbox","title":"Turn spatstat window object to bbox — owin_to_bbox","text":"Turn spatstat window object bbox","code":""},{"path":"http://antiphon.github.io/Kdirectional/reference/owin_to_bbox.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Turn spatstat window object to bbox — owin_to_bbox","text":"","code":"owin_to_bbox(x)"},{"path":"http://antiphon.github.io/Kdirectional/reference/pairwise_vectors.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute pairwise distances and angles — pairwise_vectors","title":"Compute pairwise distances and angles — pairwise_vectors","text":"Computes pairwise vectors 2d 3d point pattern. Returns  circular- spherical coordinates, depending dimension.","code":""},{"path":"http://antiphon.github.io/Kdirectional/reference/pairwise_vectors.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute pairwise distances and angles — pairwise_vectors","text":"","code":"pairwise_vectors(x, from, to, asMatrix = FALSE, as.xyz = FALSE)"},{"path":"http://antiphon.github.io/Kdirectional/reference/pairwise_vectors.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute pairwise distances and angles — pairwise_vectors","text":"x matrix coordinates. Indices compute Indices compute asMatrix return n x n matrices .xyz return xyz-coordinates instead polar/spherical","code":""},{"path":"http://antiphon.github.io/Kdirectional/reference/pairwise_vectors.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Compute pairwise distances and angles — pairwise_vectors","text":"Default return upper triangle (without diagonal)  pairwise distance angle matrices. Result 2 3 columns, first distance 2(:3) angle(s).","code":""},{"path":"http://antiphon.github.io/Kdirectional/reference/parse_marks.html","id":null,"dir":"Reference","previous_headings":"","what":"Parse input for marks — parse_marks","title":"Parse input for marks — parse_marks","text":"Parse input marks","code":""},{"path":"http://antiphon.github.io/Kdirectional/reference/parse_marks.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Parse input for marks — parse_marks","text":"","code":"parse_marks(x, marks)"},{"path":"http://antiphon.github.io/Kdirectional/reference/parse_marks.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Parse input for marks — parse_marks","text":"x Input object marks potential marks case x none.","code":""},{"path":"http://antiphon.github.io/Kdirectional/reference/pcf_anin.html","id":null,"dir":"Reference","previous_headings":"","what":"Inhomogeneous anisotropic pcf function, sector version — pcf_anin","title":"Inhomogeneous anisotropic pcf function, sector version — pcf_anin","text":"Estimate sector/cone pcf function second order reweighted (\"inhomogeneous\") pattern.","code":""},{"path":"http://antiphon.github.io/Kdirectional/reference/pcf_anin.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Inhomogeneous anisotropic pcf function, sector version — pcf_anin","text":"","code":"pcf_anin(   x,   u,   epsilon,   r,   lambda = NULL,   lambda_h,   r_h,   stoyan = 0.15,   renormalise = TRUE,   border = 1,   divisor = \"d\",   ... )"},{"path":"http://antiphon.github.io/Kdirectional/reference/pcf_anin.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Inhomogeneous anisotropic pcf function, sector version — pcf_anin","text":"x pp, list $x~coordinates $bbox~bounding box u unit vector(s) direction, row vectors. Default: x y axis. epsilon Central half angle directed sector/cone (total angle rotation cone 2*epsilon) r radius vector evaluate function lambda optional vector intensity estimates points lambda_h lambda missing, use bandwidth kernel estimate lambda(x) r_h smoothing range dimension, epanechnikov kernel stoyan r_h given, use r_h=stoyan/lambda^(1/dim). 'stoyan' spatstat's pcf. renormalise See details. border Use translation correction? Default=1, yes. cuboidal windows. divisor See spatstat's pcf.ppp . ... passed e.g. intensity_at_points","code":""},{"path":"http://antiphon.github.io/Kdirectional/reference/pcf_anin.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Inhomogeneous anisotropic pcf function, sector version — pcf_anin","text":"Returns dataframe.","code":""},{"path":"http://antiphon.github.io/Kdirectional/reference/pcf_anin.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Inhomogeneous anisotropic pcf function, sector version — pcf_anin","text":"Computes second order reweighted version sector-pcf. sector pcf differs true anisotropic pcf assuming anisotropic pcf constant small arc/cap sector, thus averaging data-area providing stable estimates. Lambda(x) points can given,  else estimated using kernel smoothing. See intensity_at_points. 'renormalise=TRUE', normalise lambda estimate sum(1/lambda(x))=|W|. corresponds spatstat's Kinhom setting 'normpower=2'.","code":""},{"path":[]},{"path":"http://antiphon.github.io/Kdirectional/reference/pcf_anin_cylinder.html","id":null,"dir":"Reference","previous_headings":"","what":"Inhomogeneous anisotropic pcf function, cylinder version — pcf_anin_cylinder","title":"Inhomogeneous anisotropic pcf function, cylinder version — pcf_anin_cylinder","text":"Estimate cylinder-pcf function second order reweighted (\"inhomogeneous\") pattern.","code":""},{"path":"http://antiphon.github.io/Kdirectional/reference/pcf_anin_cylinder.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Inhomogeneous anisotropic pcf function, cylinder version — pcf_anin_cylinder","text":"","code":"pcf_anin_cylinder(   x,   u,   epsilon,   r,   lambda = NULL,   lambda_h,   r_h,   stoyan = 0.15,   renormalise = TRUE,   border = 1,   aspect = 1/3,   ... )"},{"path":"http://antiphon.github.io/Kdirectional/reference/pcf_anin_cylinder.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Inhomogeneous anisotropic pcf function, cylinder version — pcf_anin_cylinder","text":"x pp, list $x~coordinates $bbox~bounding box u unit vector(s) direction, row vectors. Default: x y axis. epsilon cylinder half-width r radius vector evaluate function lambda optional vector intensity estimates points lambda_h lambda missing, use bandwidth kernel estimate lambda(x) r_h smoothing range dimension, epanechnikov kernel stoyan r_h given, use r_h=stoyan/lambda^(1/dim). 'stoyan' spatstat's pcf. renormalise See details. border Use translation correction? Default=1, yes. cuboidal windows. aspect given, instead using fixed halfwidth (epsilon) take halfwidth r/(2*aspect). Default : 1/3 ... passed e.g. intensity_at_points","code":""},{"path":"http://antiphon.github.io/Kdirectional/reference/pcf_anin_cylinder.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Inhomogeneous anisotropic pcf function, cylinder version — pcf_anin_cylinder","text":"Returns dataframe.","code":""},{"path":"http://antiphon.github.io/Kdirectional/reference/pcf_anin_cylinder.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Inhomogeneous anisotropic pcf function, cylinder version — pcf_anin_cylinder","text":"Computes second order reweighted version cylinder-pcf, defined function integrate range [0,R] get cylinder-K(R) function. Lambda(x) points can given,  else estimated using Epanechnikov kernel smoothing. See 'renormalise=TRUE', normalise lambda estimate sum(1/lambda(x))=|W|. corresponds spatstat's Kinhom setting 'normpower=2'.","code":""},{"path":"http://antiphon.github.io/Kdirectional/reference/pcf_anin_fry.html","id":null,"dir":"Reference","previous_headings":"","what":"Inhomogeneous anisotropic pcf function, non-spherical version — pcf_anin_fry","title":"Inhomogeneous anisotropic pcf function, non-spherical version — pcf_anin_fry","text":"Estimate anisotropic pcf function second order reweighted (\"inhomogeneous\") pattern.","code":""},{"path":"http://antiphon.github.io/Kdirectional/reference/pcf_anin_fry.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Inhomogeneous anisotropic pcf function, non-spherical version — pcf_anin_fry","text":"","code":"pcf_anin_fry(   x,   u,   r,   lambda = NULL,   lambda_h,   bw,   stoyan = 0.35,   renormalise = TRUE,   border = 1,   ... )"},{"path":"http://antiphon.github.io/Kdirectional/reference/pcf_anin_fry.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Inhomogeneous anisotropic pcf function, non-spherical version — pcf_anin_fry","text":"x pp, list $x~coordinates $bbox~bounding box u unit vector(s) direction, row vectors. Default: x y axis. r radius vector evaluate function lambda optional vector intensity estimates points lambda_h lambda missing, use bandwidth kernel estimate lambda(x) bw smoothing bandwidth multi-dimensional epanechnikov kernel. stoyan r_h given, use bw=stoyan/lambda^(1/dim). 'stoyan' spatstat's pcf. renormalise See details. border Use translation correction? Default=1, yes. cuboidal windows. ... passed e.g. intensity_at_points","code":""},{"path":"http://antiphon.github.io/Kdirectional/reference/pcf_anin_fry.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Inhomogeneous anisotropic pcf function, non-spherical version — pcf_anin_fry","text":"Returns dataframe.","code":""},{"path":"http://antiphon.github.io/Kdirectional/reference/pcf_anin_fry.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Inhomogeneous anisotropic pcf function, non-spherical version — pcf_anin_fry","text":"Computes second order reweighted version anisotropic pcf. Essentially estimate intensity pairwise vectors locations outer(r, u). use antipodal estimation, directions include antipodal pairs. Lambda(x) points can given,  else estimated using Epanechnikov kernel smoothing. See 'renormalise=TRUE', normalise lambda estimate sum(1/lambda(x))=|W|. corresponds spatstat's Kinhom setting 'normpower=2'.","code":""},{"path":[]},{"path":"http://antiphon.github.io/Kdirectional/reference/pcf_anisotropic.html","id":null,"dir":"Reference","previous_headings":"","what":"Anisotropic pair correlation function — pcf_anisotropic","title":"Anisotropic pair correlation function — pcf_anisotropic","text":"Estimate anisotropic pair correlation function (2d 3d), defined f 1991, f. 5.2-5.3.","code":""},{"path":"http://antiphon.github.io/Kdirectional/reference/pcf_anisotropic.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Anisotropic pair correlation function — pcf_anisotropic","text":"","code":"pcf_anisotropic(   x,   r,   u,   h,   stoyan = 0.15,   lambda,   lambda_h,   renormalise = TRUE,   border = 1,   divisor = \"d\",   ... )"},{"path":"http://antiphon.github.io/Kdirectional/reference/pcf_anisotropic.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Anisotropic pair correlation function — pcf_anisotropic","text":"x pp, list $x~coordinates $bbox~bounding box r radius vector estimate u direction converted angles. Use angle_2_unit transform angles. h half-widths epanechnicov kernels, vector two values, one ranges one angles. stoyan h given, use h=c( stoyan/lambda^(1/dim), stoyan*pi) (cf. pcf.ppp-function spatstat-package). lambda optional vector intensity estimates points lambda_h lambda missing lambda_h given, use bandwidth kernel estimate lambda(x). Otherwise lambda set constant. renormalise Scale lambda align Campbell formula. border Use translation correction? Default=1, yes. cuboidal windows.","code":""},{"path":"http://antiphon.github.io/Kdirectional/reference/pcf_anisotropic.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Anisotropic pair correlation function — pcf_anisotropic","text":"antipode symmetry makes necessary compute one half circle/sphere.","code":""},{"path":"http://antiphon.github.io/Kdirectional/reference/pcf_anisotropic_old.html","id":null,"dir":"Reference","previous_headings":"","what":"Anisotropic pair correlation function, old version — pcf_anisotropic_old","title":"Anisotropic pair correlation function, old version — pcf_anisotropic_old","text":"Estimate anisotropic pair correlation function (2d 3d), defined f 1991, f. 5.2-5.3.","code":""},{"path":"http://antiphon.github.io/Kdirectional/reference/pcf_anisotropic_old.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Anisotropic pair correlation function, old version — pcf_anisotropic_old","text":"","code":"pcf_anisotropic_old(   x,   r,   theta,   h,   stoyan = 0.15,   correction = \"translation\",   n_dir = 7 )"},{"path":"http://antiphon.github.io/Kdirectional/reference/pcf_anisotropic_old.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Anisotropic pair correlation function, old version — pcf_anisotropic_old","text":"x pp, list $x~coordinates $bbox~bounding box r radius vector estimate theta vector list vectors angles, see details. h widths epanechnicov kernels, vector two values, one ranges one angles. stoyan h given, use h=c( stoyan/lambda^(1/dim), stoyan*pi) (cf. pcf.ppp-function spatstat-package). correction \"none\" translation. Translation rectangle box. n_dir Angle grid resolution (case theta given) antipode symmetry makes necessary compute one half circle/sphere.","code":""},{"path":"http://antiphon.github.io/Kdirectional/reference/pcf_directional.html","id":null,"dir":"Reference","previous_headings":"","what":"Directed pcf function — pcf_directional","title":"Directed pcf function — pcf_directional","text":"use translation edge correction axis-oriented bounding box. Otherwise minus-correction.","code":""},{"path":"http://antiphon.github.io/Kdirectional/reference/pcf_directional.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Directed pcf function — pcf_directional","text":"","code":"pcf_directional(x, u, epsilon, r, ..., cylindrical = FALSE)"},{"path":"http://antiphon.github.io/Kdirectional/reference/pcf_directional.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Directed pcf function — pcf_directional","text":"x pp, spatstat's ppp-object, coordinate matrix, list $x~coordinates $bbox~bounding box u unit direction(s), many one direction per row. epsilon Central angle directed cone (total angle 2 epsilon) r radius vector evaluate K ... Passed pcf_anin cylindrical TRUE, compute cylindrical version using pcf_anin_cylinder","code":""},{"path":"http://antiphon.github.io/Kdirectional/reference/pcf_directional.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Directed pcf function — pcf_directional","text":"Returns dataframe.","code":""},{"path":"http://antiphon.github.io/Kdirectional/reference/pcf_directional.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Directed pcf function — pcf_directional","text":"Compute sector/cone/cylindrical pcf function. version uses general anisotropic-inhomonogeneous pcf_anin_conical pcf_anin_cylinder, setting intensity = constant. See parameters, especially kernel smoothing options.","code":""},{"path":"http://antiphon.github.io/Kdirectional/reference/pcf_directional.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Directed pcf function — pcf_directional","text":"","code":"x <- matrix(runif(300), ncol=2) k <- pcf_directional(x) plot(k, rmax = 0.1)"},{"path":"http://antiphon.github.io/Kdirectional/reference/pcf_directions.html","id":null,"dir":"Reference","previous_headings":"","what":"Anisotropic pair correlation function, direction vector formulation — pcf_directions","title":"Anisotropic pair correlation function, direction vector formulation — pcf_directions","text":"Estimate anisotropic pair correlation function (2d 3d), defined Stoyan 1991, f. 5.2-5.3. one use spherical coordinates direction vectors.","code":""},{"path":"http://antiphon.github.io/Kdirectional/reference/pcf_directions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Anisotropic pair correlation function, direction vector formulation — pcf_directions","text":"","code":"pcf_directions(   x,   directions,   h,   f = 0.15,   correction = \"translation\",   n_dir,   r )"},{"path":"http://antiphon.github.io/Kdirectional/reference/pcf_directions.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Anisotropic pair correlation function, direction vector formulation — pcf_directions","text":"x pp, list $x~coordinates $bbox~bounding box directions Matrix direction vectors h widths epanechnicov kernels, vector two values, ranges angles. f h given, use h=f/lambda^(1/dim) range h=f*pi correction \"none\" translation. Translation rectangle box. n_dir Direction vector grid resolution (units given). See Details. r case directions given, use lengths generated directions.","code":""},{"path":"http://antiphon.github.io/Kdirectional/reference/pcf_directions.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Anisotropic pair correlation function, direction vector formulation — pcf_directions","text":"example, 2D polar vector (r, theta) now vector (r*cos(theta), r*sin(theta)). 2d, use regular grid n_dir steps [0,pi], leaving pi due antipode-symmetry 0.  n_dir=7 default. 3d use triangular grid expanding sphere. generated subdiving regular icosahedron n_dir times. n_dir=2 default.","code":""},{"path":"http://antiphon.github.io/Kdirectional/reference/pcf_sector.html","id":null,"dir":"Reference","previous_headings":"","what":"Sector pair correlation function — pcf_sector","title":"Sector pair correlation function — pcf_sector","text":"[DEFUNC] \"sector pair correlation function\" Stoyan 1991. Direction defined unit vector. Estimated cone angle theta different radii.","code":""},{"path":"http://antiphon.github.io/Kdirectional/reference/pcf_sector.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sector pair correlation function — pcf_sector","text":"","code":"pcf_sector(   x,   r,   theta,   unit,   epsilon,   h,   stoyan = 0.15,   correction = \"translation\",   n_dir = 12 )"},{"path":"http://antiphon.github.io/Kdirectional/reference/pcf_sector.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Sector pair correlation function — pcf_sector","text":"x pp, list $x~coordinates $bbox~bounding box r Ranges theta Direction sector central angles, list ncol(x$x)-components. unit Alternative theta, matrix direction vectors. epsilon Direction sector width angles h width epanechnicov kernel stoyan h given, use h=stoyan/sqrt(lambda) correction \"none\" translation. Translation rectangle box. n_dir unit missing, compute grid resolution n_dir","code":""},{"path":"http://antiphon.github.io/Kdirectional/reference/pcf_sector.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Sector pair correlation function — pcf_sector","text":"Otherwise default pcf spatstat, now angle.","code":""},{"path":"http://antiphon.github.io/Kdirectional/reference/periodogram.html","id":null,"dir":"Reference","previous_headings":"","what":"Bartlett's periodogram — periodogram","title":"Bartlett's periodogram — periodogram","text":"Bartlett's periodogram","code":""},{"path":"http://antiphon.github.io/Kdirectional/reference/periodogram.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Bartlett's periodogram — periodogram","text":"","code":"periodogram(x, p, pgrid, std = TRUE, ...)"},{"path":"http://antiphon.github.io/Kdirectional/reference/periodogram.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Bartlett's periodogram — periodogram","text":"x point pattern, list $x $bbox p number frequencies, (-p:p)^2 grid pgrid grid integer spectral frequencies, two column matrix. std Standardize coordinates? ... ignored Omega=0 value set NA, returned $zerov return object.","code":""},{"path":"http://antiphon.github.io/Kdirectional/reference/periodogram_MR.html","id":null,"dir":"Reference","previous_headings":"","what":"Periodogram as in Mugglestone and Renshaw 2001 — periodogram_MR","title":"Periodogram as in Mugglestone and Renshaw 2001 — periodogram_MR","text":"Periodogram Mugglestone Renshaw 2001","code":""},{"path":"http://antiphon.github.io/Kdirectional/reference/periodogram_MR.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Periodogram as in Mugglestone and Renshaw 2001 — periodogram_MR","text":"","code":"periodogram_MR(x, ...)"},{"path":"http://antiphon.github.io/Kdirectional/reference/periodogram_MR.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Periodogram as in Mugglestone and Renshaw 2001 — periodogram_MR","text":"x point pattern, list $x $bbox ... ignored","code":""},{"path":"http://antiphon.github.io/Kdirectional/reference/persp.ellipsoid.html","id":null,"dir":"Reference","previous_headings":"","what":"Perspective plot of an ellipsoid in 3d — persp.ellipsoid","title":"Perspective plot of an ellipsoid in 3d — persp.ellipsoid","text":"Try make pretty perspective plot 3D ellipsoid.","code":""},{"path":"http://antiphon.github.io/Kdirectional/reference/persp.ellipsoid.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Perspective plot of an ellipsoid in 3d — persp.ellipsoid","text":"","code":"# S3 method for ellipsoid persp(   x,   add = FALSE,   theta = 25,   phi = 30,   expand = 0.9,   triptych = FALSE,   pmat,   ... )"},{"path":"http://antiphon.github.io/Kdirectional/reference/persp.ellipsoid.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Perspective plot of an ellipsoid in 3d — persp.ellipsoid","text":"x ellipsoid-object add Add scene? theta Camera rotation, see persp.default phi Camera rotation, see persp.default expand zoom triptych plot three main axes? pmat optional projection matrix (e.g. 2d persp)","code":""},{"path":"http://antiphon.github.io/Kdirectional/reference/pKolmogorov.html","id":null,"dir":"Reference","previous_headings":"","what":"Limiting distribution of the Kolmogorov-Smirnov test statistic — pKolmogorov","title":"Limiting distribution of the Kolmogorov-Smirnov test statistic — pKolmogorov","text":"Limiting distribution Kolmogorov-Smirnov test statistic","code":""},{"path":"http://antiphon.github.io/Kdirectional/reference/pKolmogorov.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Limiting distribution of the Kolmogorov-Smirnov test statistic — pKolmogorov","text":"","code":"pKolmogorov(x, upto = 999)"},{"path":"http://antiphon.github.io/Kdirectional/reference/pKolmogorov.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Limiting distribution of the Kolmogorov-Smirnov test statistic — pKolmogorov","text":"return approximately lim P(sqrt(n)Dn < x) .","code":""},{"path":"http://antiphon.github.io/Kdirectional/reference/plot.anisotropyprofile.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot method for ","title":"Plot method for ","text":"Plot method \"anisotropyprofile\"","code":""},{"path":"http://antiphon.github.io/Kdirectional/reference/plot.anisotropyprofile.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot method for ","text":"","code":"# S3 method for anisotropyprofile plot(   x,   ...,   xlab = \"first grid component\",   ylab = \"anisotropy profile\",   scale = TRUE )"},{"path":"http://antiphon.github.io/Kdirectional/reference/plot.bbpoly.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot bbpoly object — plot.bbpoly","title":"Plot bbpoly object — plot.bbpoly","text":"Plot bbpoly object","code":""},{"path":"http://antiphon.github.io/Kdirectional/reference/plot.bbpoly.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot bbpoly object — plot.bbpoly","text":"","code":"# S3 method for bbpoly plot(x, normals = FALSE, faces = FALSE, ecol = 2, ncol = 4, add = TRUE, ...)"},{"path":"http://antiphon.github.io/Kdirectional/reference/plot.bbquad.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot bbquad object — plot.bbquad","title":"Plot bbquad object — plot.bbquad","text":"Plot bbquad object","code":""},{"path":"http://antiphon.github.io/Kdirectional/reference/plot.bbquad.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot bbquad object — plot.bbquad","text":"","code":"# S3 method for bbquad plot(x, edges = FALSE, normals = FALSE, ecol = 2, ncol = 4, add = TRUE, ...)"},{"path":"http://antiphon.github.io/Kdirectional/reference/plot.confint_fryellipsoids.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot confidence intervals — plot.confint_fryellipsoids","title":"Plot confidence intervals — plot.confint_fryellipsoids","text":"Plot confidence intervals","code":""},{"path":"http://antiphon.github.io/Kdirectional/reference/plot.confint_fryellipsoids.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot confidence intervals — plot.confint_fryellipsoids","text":"","code":"# S3 method for confint_fryellipsoids plot(x, ylim, ...)"},{"path":"http://antiphon.github.io/Kdirectional/reference/plot.ellipsoid.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot an ellipsoid — plot.ellipsoid","title":"Plot an ellipsoid — plot.ellipsoid","text":"Plot ellipsoid","code":""},{"path":"http://antiphon.github.io/Kdirectional/reference/plot.ellipsoid.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot an ellipsoid — plot.ellipsoid","text":"","code":"# S3 method for ellipsoid plot(   x,   add = TRUE,   i = 0,   levels = 1,   res = 128,   scale = 1,   N = 2,   xlab = \"x\",   ylab = \"y\",   ... )"},{"path":"http://antiphon.github.io/Kdirectional/reference/plot.ellipsoid.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot an ellipsoid — plot.ellipsoid","text":"x ellipsoid add logical Normal 1,2 3. Plot intersection 3d ellipsoid. levels >0, draw many levels origin tip axis res 2d resolution scale 1. use enlarge shrink N 2, iteration refinement 3D (resolution) xlab axis-label ylab axis-label ... passed lines rgl::shade3d","code":""},{"path":"http://antiphon.github.io/Kdirectional/reference/plot.ellipsoid.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Plot an ellipsoid — plot.ellipsoid","text":"#' 3D ellipsoid, =1,2 3, plot 2D intersection  plane:  = 1 yz-plane; = 2 xz-plane; = 3 xy-plane.","code":""},{"path":"http://antiphon.github.io/Kdirectional/reference/plot.fryellipsoids.html","id":null,"dir":"Reference","previous_headings":"","what":"plot method for fryellipsoids — plot.fryellipsoids","title":"plot method for fryellipsoids — plot.fryellipsoids","text":"plot method fryellipsoids","code":""},{"path":"http://antiphon.github.io/Kdirectional/reference/plot.fryellipsoids.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"plot method for fryellipsoids — plot.fryellipsoids","text":"","code":"# S3 method for fryellipsoids plot(   x,   ellipsoids = TRUE,   used_points = TRUE,   sectors = NULL,   xlim = NULL,   ylim = NULL,   zoom = NULL,   pch = 1,   cex = 0.8,   ... )"},{"path":"http://antiphon.github.io/Kdirectional/reference/plot.f_cone.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot a typical conical directed function of range — plot.f_cone","title":"Plot a typical conical directed function of range — plot.f_cone","text":"Plot typical conical directed function range","code":""},{"path":"http://antiphon.github.io/Kdirectional/reference/plot.f_cone.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot a typical conical directed function of range — plot.f_cone","text":"","code":"# S3 method for f_cone plot(x, r_scale = 1, rmax, ylim, legpos = \"topright\", lwd = 1, ...)"},{"path":"http://antiphon.github.io/Kdirectional/reference/plot.f_cone.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot a typical conical directed function of range — plot.f_cone","text":"x Output function r_scale Plot x-axis r*r_scale rmax plot upto range ylim optional range y-axis legpos legend position ... passed plot","code":""},{"path":"http://antiphon.github.io/Kdirectional/reference/plot.f_cone.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Plot a typical conical directed function of range — plot.f_cone","text":"Used : nn_directional_distance_*","code":""},{"path":"http://antiphon.github.io/Kdirectional/reference/plot.intensity_bw.html","id":null,"dir":"Reference","previous_headings":"","what":"Quick plot for intensity bw object — plot.intensity_bw","title":"Quick plot for intensity bw object — plot.intensity_bw","text":"Quick plot intensity bw object","code":""},{"path":"http://antiphon.github.io/Kdirectional/reference/plot.intensity_bw.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Quick plot for intensity bw object — plot.intensity_bw","text":"","code":"# S3 method for intensity_bw plot(x, ...)"},{"path":"http://antiphon.github.io/Kdirectional/reference/plot.intensity_bw.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Quick plot for intensity bw object — plot.intensity_bw","text":"x output intensity_bandwidth_profile ... passed plot.default","code":""},{"path":"http://antiphon.github.io/Kdirectional/reference/plot.K_anin.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot Kest_anin object — plot.K_anin","title":"Plot Kest_anin object — plot.K_anin","text":"Plot Kest_anin object Plot Kest_anin object","code":""},{"path":"http://antiphon.github.io/Kdirectional/reference/plot.K_anin.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot Kest_anin object — plot.K_anin","text":"","code":"# S3 method for K_anin plot(x, r_scale = 1, rmax, legpos = \"topleft\", lwd = 1, ...)  # S3 method for K_anin plot(x, r_scale = 1, rmax, legpos = \"topleft\", lwd = 1, ...)"},{"path":"http://antiphon.github.io/Kdirectional/reference/plot.K_anin.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot Kest_anin object — plot.K_anin","text":"x Output Kest_anin r_scale Plot x-axis r*r_scale rmax plot upto range legpos legend position ... passed plot","code":""},{"path":"http://antiphon.github.io/Kdirectional/reference/plot.markcorr_anin.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot markcorr_anin object — plot.markcorr_anin","title":"Plot markcorr_anin object — plot.markcorr_anin","text":"Plot markcorr_anin object","code":""},{"path":"http://antiphon.github.io/Kdirectional/reference/plot.markcorr_anin.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot markcorr_anin object — plot.markcorr_anin","text":"","code":"# S3 method for markcorr_anin plot(x, r_scale = 1, rmax, ylim, legpos = \"topright\", ...)"},{"path":"http://antiphon.github.io/Kdirectional/reference/plot.markcorr_anin.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot markcorr_anin object — plot.markcorr_anin","text":"x Output markcor_anin r_scale Plot x-axis r*r_scale rmax plot upto range ylim optional range y-axis legpos legend position ... passed plot","code":""},{"path":"http://antiphon.github.io/Kdirectional/reference/plot.nnangle.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot for nnangle — plot.nnangle","title":"Plot for nnangle — plot.nnangle","text":"Plot nnangle","code":""},{"path":"http://antiphon.github.io/Kdirectional/reference/plot.nnangle.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot for nnangle — plot.nnangle","text":"","code":"# S3 method for nnangle plot(x, ...)"},{"path":"http://antiphon.github.io/Kdirectional/reference/plot.os_K.html","id":null,"dir":"Reference","previous_headings":"","what":"method plot for O-S K-function — plot.os_K","title":"method plot for O-S K-function — plot.os_K","text":"method plot O-S K-function","code":""},{"path":"http://antiphon.github.io/Kdirectional/reference/plot.os_K.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"method plot for O-S K-function — plot.os_K","text":"","code":"# S3 method for os_K plot(x, ...)"},{"path":"http://antiphon.github.io/Kdirectional/reference/plot.pcf_anin.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot pcf_anin object — plot.pcf_anin","title":"Plot pcf_anin object — plot.pcf_anin","text":"Plot pcf_anin object","code":""},{"path":"http://antiphon.github.io/Kdirectional/reference/plot.pcf_anin.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot pcf_anin object — plot.pcf_anin","text":"","code":"# S3 method for pcf_anin plot(x, r_scale = 1, rmax, ylim, legpos = \"topright\", ...)"},{"path":"http://antiphon.github.io/Kdirectional/reference/plot.pcf_anin.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot pcf_anin object — plot.pcf_anin","text":"x Output pcf_anin pcf_anin_cylinder r_scale Plot x-axis r*r_scale rmax plot upto range ylim optional range y-axis legpos legend position ... passed plot","code":""},{"path":"http://antiphon.github.io/Kdirectional/reference/plot.pcf_anisotropic.html","id":null,"dir":"Reference","previous_headings":"","what":"method plot for anisotropic pcf-function — plot.pcf_anisotropic","title":"method plot for anisotropic pcf-function — plot.pcf_anisotropic","text":"method plot anisotropic pcf-function","code":""},{"path":"http://antiphon.github.io/Kdirectional/reference/plot.pcf_anisotropic.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"method plot for anisotropic pcf-function — plot.pcf_anisotropic","text":"","code":"# S3 method for pcf_anisotropic plot(x, ab, ...)"},{"path":"http://antiphon.github.io/Kdirectional/reference/plot.pcf_directions.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot for pcf_directions — plot.pcf_directions","title":"Plot for pcf_directions — plot.pcf_directions","text":"Plot pcf_directions","code":""},{"path":"http://antiphon.github.io/Kdirectional/reference/plot.pcf_directions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot for pcf_directions — plot.pcf_directions","text":"","code":"# S3 method for pcf_directions plot(x, ymax = 2, ...)"},{"path":"http://antiphon.github.io/Kdirectional/reference/plot2d.pcf_anisotropic.html","id":null,"dir":"Reference","previous_headings":"","what":"method plot2d for anisotropic pcf-function — plot2d.pcf_anisotropic","title":"method plot2d for anisotropic pcf-function — plot2d.pcf_anisotropic","text":"method plot2d anisotropic pcf-function","code":""},{"path":"http://antiphon.github.io/Kdirectional/reference/plot2d.pcf_anisotropic.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"method plot2d for anisotropic pcf-function — plot2d.pcf_anisotropic","text":"","code":"plot2d.pcf_anisotropic(x, ab, ...)"},{"path":"http://antiphon.github.io/Kdirectional/reference/poly2bbpoly.html","id":null,"dir":"Reference","previous_headings":"","what":"bbpoly from 2d polygon given by x and y coordinates — poly2bbpoly","title":"bbpoly from 2d polygon given by x and y coordinates — poly2bbpoly","text":"bbpoly 2d polygon given x y coordinates","code":""},{"path":"http://antiphon.github.io/Kdirectional/reference/poly2bbpoly.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"bbpoly from 2d polygon given by x and y coordinates — poly2bbpoly","text":"","code":"poly2bbpoly(x, y)"},{"path":"http://antiphon.github.io/Kdirectional/reference/poly2bbpoly.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"bbpoly from 2d polygon given by x and y coordinates — poly2bbpoly","text":"x x coordinates y y coordinates","code":""},{"path":"http://antiphon.github.io/Kdirectional/reference/poly2bbpoly.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"bbpoly from 2d polygon given by x and y coordinates — poly2bbpoly","text":"Assuming open polygon, meaning last vertex  first. check adapt.","code":""},{"path":"http://antiphon.github.io/Kdirectional/reference/poly_to_bbquad.html","id":null,"dir":"Reference","previous_headings":"","what":"bbquad from 2d polygon — poly_to_bbquad","title":"bbquad from 2d polygon — poly_to_bbquad","text":"bbquad 2d polygon","code":""},{"path":"http://antiphon.github.io/Kdirectional/reference/poly_to_bbquad.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"bbquad from 2d polygon — poly_to_bbquad","text":"","code":"poly_to_bbquad(x, y)"},{"path":"http://antiphon.github.io/Kdirectional/reference/predict.ellipsoid.html","id":null,"dir":"Reference","previous_headings":"","what":"Predict i.e. give the length of a direction to be on the ellipsoid — predict.ellipsoid","title":"Predict i.e. give the length of a direction to be on the ellipsoid — predict.ellipsoid","text":"Returns distance ellipsoid center ellipsoid surface given directions.","code":""},{"path":"http://antiphon.github.io/Kdirectional/reference/predict.ellipsoid.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Predict i.e. give the length of a direction to be on the ellipsoid — predict.ellipsoid","text":"","code":"# S3 method for ellipsoid predict(x, u, ...)"},{"path":"http://antiphon.github.io/Kdirectional/reference/print.anisotropyprofile.html","id":null,"dir":"Reference","previous_headings":"","what":"print for anisotropy profile — print.anisotropyprofile","title":"print for anisotropy profile — print.anisotropyprofile","text":"print anisotropy profile","code":""},{"path":"http://antiphon.github.io/Kdirectional/reference/print.anisotropyprofile.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"print for anisotropy profile — print.anisotropyprofile","text":"","code":"# S3 method for anisotropyprofile print(x, ...)"},{"path":"http://antiphon.github.io/Kdirectional/reference/print.anisotropyprofile.summary.html","id":null,"dir":"Reference","previous_headings":"","what":"Print method for ","title":"Print method for ","text":"Print method \"anisotropyprofile\" summary","code":""},{"path":"http://antiphon.github.io/Kdirectional/reference/print.anisotropyprofile.summary.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print method for ","text":"","code":"# S3 method for anisotropyprofile.summary print(x, ...)"},{"path":"http://antiphon.github.io/Kdirectional/reference/print.bbpoly.html","id":null,"dir":"Reference","previous_headings":"","what":"print method for bbpoly, a cuboid made of quads — print.bbpoly","title":"print method for bbpoly, a cuboid made of quads — print.bbpoly","text":"print method bbpoly, cuboid made quads","code":""},{"path":"http://antiphon.github.io/Kdirectional/reference/print.bbpoly.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"print method for bbpoly, a cuboid made of quads — print.bbpoly","text":"","code":"# S3 method for bbpoly print(x, ...)"},{"path":"http://antiphon.github.io/Kdirectional/reference/print.bbpoly.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"print method for bbpoly, a cuboid made of quads — print.bbpoly","text":"x object ... ignored","code":""},{"path":"http://antiphon.github.io/Kdirectional/reference/print.bbquad.html","id":null,"dir":"Reference","previous_headings":"","what":"print method for bbquad, a cuboid made of quads — print.bbquad","title":"print method for bbquad, a cuboid made of quads — print.bbquad","text":"print method bbquad, cuboid made quads","code":""},{"path":"http://antiphon.github.io/Kdirectional/reference/print.bbquad.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"print method for bbquad, a cuboid made of quads — print.bbquad","text":"","code":"# S3 method for bbquad print(x, ...)"},{"path":"http://antiphon.github.io/Kdirectional/reference/print.confint_fryellipsoids.html","id":null,"dir":"Reference","previous_headings":"","what":"Print method for confint_fryellipsoid — print.confint_fryellipsoids","title":"Print method for confint_fryellipsoid — print.confint_fryellipsoids","text":"Print method confint_fryellipsoid","code":""},{"path":"http://antiphon.github.io/Kdirectional/reference/print.confint_fryellipsoids.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print method for confint_fryellipsoid — print.confint_fryellipsoids","text":"","code":"# S3 method for confint_fryellipsoids print(x, ...)"},{"path":"http://antiphon.github.io/Kdirectional/reference/print.ellipsoid.html","id":null,"dir":"Reference","previous_headings":"","what":"Print ellipsoid — print.ellipsoid","title":"Print ellipsoid — print.ellipsoid","text":"Print ellipsoid","code":""},{"path":"http://antiphon.github.io/Kdirectional/reference/print.ellipsoid.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print ellipsoid — print.ellipsoid","text":"","code":"# S3 method for ellipsoid print(x, ...)"},{"path":"http://antiphon.github.io/Kdirectional/reference/print.fryellipsoids.html","id":null,"dir":"Reference","previous_headings":"","what":"Print method for fryellipsoids — print.fryellipsoids","title":"Print method for fryellipsoids — print.fryellipsoids","text":"Print method fryellipsoids","code":""},{"path":"http://antiphon.github.io/Kdirectional/reference/print.fryellipsoids.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print method for fryellipsoids — print.fryellipsoids","text":"","code":"# S3 method for fryellipsoids print(x, ...)"},{"path":"http://antiphon.github.io/Kdirectional/reference/print.intensity_bw.html","id":null,"dir":"Reference","previous_headings":"","what":"Print for intensity bw object — print.intensity_bw","title":"Print for intensity bw object — print.intensity_bw","text":"Print intensity bw object","code":""},{"path":"http://antiphon.github.io/Kdirectional/reference/print.intensity_bw.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print for intensity bw object — print.intensity_bw","text":"","code":"# S3 method for intensity_bw print(x, ...)"},{"path":"http://antiphon.github.io/Kdirectional/reference/print.intensity_bw.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print for intensity bw object — print.intensity_bw","text":"x output intensity_bandwidth_profile ... ignored","code":""},{"path":"http://antiphon.github.io/Kdirectional/reference/print.nnangle.html","id":null,"dir":"Reference","previous_headings":"","what":"Print for nearest neighbour angles — print.nnangle","title":"Print for nearest neighbour angles — print.nnangle","text":"Print nearest neighbour angles","code":""},{"path":"http://antiphon.github.io/Kdirectional/reference/print.nnangle.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print for nearest neighbour angles — print.nnangle","text":"","code":"# S3 method for nnangle print(x, ...)"},{"path":"http://antiphon.github.io/Kdirectional/reference/quaternion2Euler.html","id":null,"dir":"Reference","previous_headings":"","what":"Quaternion to Euler axis/angle — quaternion2Euler","title":"Quaternion to Euler axis/angle — quaternion2Euler","text":"Quaternion Euler axis/angle","code":""},{"path":"http://antiphon.github.io/Kdirectional/reference/quaternion2Euler.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Quaternion to Euler axis/angle — quaternion2Euler","text":"","code":"quaternion2Euler(q)"},{"path":"http://antiphon.github.io/Kdirectional/reference/quaternion2EulerAngles.html","id":null,"dir":"Reference","previous_headings":"","what":"Quaternion to Euler angles — quaternion2EulerAngles","title":"Quaternion to Euler angles — quaternion2EulerAngles","text":"euclideanspace.com,","code":""},{"path":"http://antiphon.github.io/Kdirectional/reference/quaternion2EulerAngles.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Quaternion to Euler angles — quaternion2EulerAngles","text":"","code":"quaternion2EulerAngles(q)"},{"path":"http://antiphon.github.io/Kdirectional/reference/quaternion2EulerAngles.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Quaternion to Euler angles — quaternion2EulerAngles","text":"Convention: Euler (Heading, Attitude, Bank) Heading = rotation  around y, Attitude = rotation around z,  Bank = rotation around x, order.","code":""},{"path":"http://antiphon.github.io/Kdirectional/reference/quaternion2rotationMatrix.html","id":null,"dir":"Reference","previous_headings":"","what":"Quaternion to rotation matrix — quaternion2rotationMatrix","title":"Quaternion to rotation matrix — quaternion2rotationMatrix","text":"Quaternion rotation matrix","code":""},{"path":"http://antiphon.github.io/Kdirectional/reference/quaternion2rotationMatrix.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Quaternion to rotation matrix — quaternion2rotationMatrix","text":"","code":"quaternion2rotationMatrix(q)"},{"path":"http://antiphon.github.io/Kdirectional/reference/rad2deg.html","id":null,"dir":"Reference","previous_headings":"","what":"Radians to degree — rad2deg","title":"Radians to degree — rad2deg","text":"Radians degree","code":""},{"path":"http://antiphon.github.io/Kdirectional/reference/rad2deg.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Radians to degree — rad2deg","text":"","code":"rad2deg(rad)"},{"path":"http://antiphon.github.io/Kdirectional/reference/redenbach_border_term.html","id":null,"dir":"Reference","previous_headings":"","what":"The erosion of window with sector — redenbach_border_term","title":"The erosion of window with sector — redenbach_border_term","text":"erosion window sector","code":""},{"path":"http://antiphon.github.io/Kdirectional/reference/redenbach_border_term.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"The erosion of window with sector — redenbach_border_term","text":"","code":"redenbach_border_term(d, bbox, u, epsilon)"},{"path":"http://antiphon.github.io/Kdirectional/reference/redenbach_border_term.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"The erosion of window with sector — redenbach_border_term","text":"Called 'nn_directional_distance_distribution' function.","code":""},{"path":"http://antiphon.github.io/Kdirectional/reference/rellipsoid.html","id":null,"dir":"Reference","previous_headings":"","what":"Sample points Roughly Uniformly on the surface of an ellipsoid, 2D or 3D — rellipsoid","title":"Sample points Roughly Uniformly on the surface of an ellipsoid, 2D or 3D — rellipsoid","text":"Sample points Roughly Uniformly surface ellipsoid, 2D 3D","code":""},{"path":"http://antiphon.github.io/Kdirectional/reference/rellipsoid.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sample points Roughly Uniformly on the surface of an ellipsoid, 2D or 3D — rellipsoid","text":"","code":"rellipsoid(n, axes = c(1, 1, 1), center, noise.sd = 0, R = NULL, pieces = 1000)"},{"path":"http://antiphon.github.io/Kdirectional/reference/rellipsoid.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Sample points Roughly Uniformly on the surface of an ellipsoid, 2D or 3D — rellipsoid","text":"axes vector giving semi-axis lengths center center vector, c(x,y) c(x,y,z) noise.sd noise sd, 0=noise R rotation matrix pieces Number pieces divide surface . See details.","code":""},{"path":"http://antiphon.github.io/Kdirectional/reference/rellipsoid.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Sample points Roughly Uniformly on the surface of an ellipsoid, 2D or 3D — rellipsoid","text":"Sampling done first sampling uniformly surface sphere transforming ellipsoid axes. Corrections: * 2D: sampling weights set piecewise linear approximation ellipse surface integral,  resolution controlled 'pieces'. * 3D: weighting moment, biased elongated ellipsoids. Additional nD Gaussian noise can added setting `noise.sd`>0.","code":""},{"path":"http://antiphon.github.io/Kdirectional/reference/rellipsoid_dev.html","id":null,"dir":"Reference","previous_headings":"","what":"Sample points uniformly on the surface of an ellipsoid, 2D or 3D — rellipsoid_dev","title":"Sample points uniformly on the surface of an ellipsoid, 2D or 3D — rellipsoid_dev","text":"Sample points uniformly surface ellipsoid, 2D 3D","code":""},{"path":"http://antiphon.github.io/Kdirectional/reference/rellipsoid_dev.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sample points uniformly on the surface of an ellipsoid, 2D or 3D — rellipsoid_dev","text":"","code":"rellipsoid_dev(   n,   axes = c(1, 1, 1),   noise.sd = 0,   R = NULL,   method = 1,   rej = FALSE )"},{"path":"http://antiphon.github.io/Kdirectional/reference/rellipsoid_dev.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Sample points uniformly on the surface of an ellipsoid, 2D or 3D — rellipsoid_dev","text":"axes vector giving semi-axis lengths noise.sd noise R rotation matrix","code":""},{"path":"http://antiphon.github.io/Kdirectional/reference/rosenberg.html","id":null,"dir":"Reference","previous_headings":"","what":"Rosenberg Wavelet Transform — rosenberg","title":"Rosenberg Wavelet Transform — rosenberg","text":"Estimate wavelet variance suggested Rosenberg 2004. 2D , rectangular box .","code":""},{"path":"http://antiphon.github.io/Kdirectional/reference/rosenberg.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Rosenberg Wavelet Transform — rosenberg","text":"","code":"rosenberg(   x,   theta = seq(0, pi, l = 50),   scales = 1:45/180 * pi,   steps = 180,   include = 0.75 )"},{"path":"http://antiphon.github.io/Kdirectional/reference/rosenberg.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Rosenberg Wavelet Transform — rosenberg","text":"x pp, list $x~coordinates $bbox~bounding box theta directions estimate wavelet variance scales angular scales average , radians. steps divide half-circle many sectors around point (default: 180) include estimate variance points central region, area fraction given 'include'. default: 0.5.","code":""},{"path":"http://antiphon.github.io/Kdirectional/reference/rosenberg.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Rosenberg Wavelet Transform — rosenberg","text":"Compute estimator given Rosenberg 2004.","code":""},{"path":"http://antiphon.github.io/Kdirectional/reference/rosenberg.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Rosenberg Wavelet Transform — rosenberg","text":"Rosenberg M S, Wavelet analysis detecting anisotropy point patterns, J Veg Sci 2004","code":""},{"path":"http://antiphon.github.io/Kdirectional/reference/rotationMatrix2Euler.html","id":null,"dir":"Reference","previous_headings":"","what":"Rotation matrix (prop or improp) to Euler axis-angle — rotationMatrix2Euler","title":"Rotation matrix (prop or improp) to Euler axis-angle — rotationMatrix2Euler","text":"Rotation matrix (prop improp) Euler axis-angle","code":""},{"path":"http://antiphon.github.io/Kdirectional/reference/rotationMatrix2Euler.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Rotation matrix (prop or improp) to Euler axis-angle — rotationMatrix2Euler","text":"","code":"rotationMatrix2Euler(R)"},{"path":"http://antiphon.github.io/Kdirectional/reference/rotationMatrix2EulerAngles.html","id":null,"dir":"Reference","previous_headings":"","what":"Rotation matrix to Euler angles — rotationMatrix2EulerAngles","title":"Rotation matrix to Euler angles — rotationMatrix2EulerAngles","text":"Rotation matrix Euler angles","code":""},{"path":"http://antiphon.github.io/Kdirectional/reference/rotationMatrix2EulerAngles.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Rotation matrix to Euler angles — rotationMatrix2EulerAngles","text":"","code":"rotationMatrix2EulerAngles(R)"},{"path":"http://antiphon.github.io/Kdirectional/reference/rotationMatrix2EulerAngles.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Rotation matrix to Euler angles — rotationMatrix2EulerAngles","text":"(Heading, Attitude, Bank)","code":""},{"path":"http://antiphon.github.io/Kdirectional/reference/rotationMatrix2quaternion.html","id":null,"dir":"Reference","previous_headings":"","what":"Rotation matrix to quaternion — rotationMatrix2quaternion","title":"Rotation matrix to quaternion — rotationMatrix2quaternion","text":"Rotation matrix quaternion","code":""},{"path":"http://antiphon.github.io/Kdirectional/reference/rotationMatrix2quaternion.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Rotation matrix to quaternion — rotationMatrix2quaternion","text":"","code":"rotationMatrix2quaternion(R)"},{"path":"http://antiphon.github.io/Kdirectional/reference/rotationMatrix3.html","id":null,"dir":"Reference","previous_headings":"","what":"Product of elementary rotation matrices in 3D — rotationMatrix3","title":"Product of elementary rotation matrices in 3D — rotationMatrix3","text":"Product elementary rotation matrices 3D","code":""},{"path":"http://antiphon.github.io/Kdirectional/reference/rotationMatrix3.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Product of elementary rotation matrices in 3D — rotationMatrix3","text":"","code":"rotationMatrix3(ax = 0, ay = 0, az = 0, order = c(3, 2, 1))"},{"path":"http://antiphon.github.io/Kdirectional/reference/rotationMatrix3.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Product of elementary rotation matrices in 3D — rotationMatrix3","text":"order Order product. Aimed pre-product Default: 3-2-1 .e. around z, around y, around x.","code":""},{"path":"http://antiphon.github.io/Kdirectional/reference/sample_ellipse_beta.html","id":null,"dir":"Reference","previous_headings":"","what":"Sample from the OLS estimate of the beta parameters — sample_ellipse_beta","title":"Sample from the OLS estimate of the beta parameters — sample_ellipse_beta","text":"Simulate beta parameters, approximately normal conditional ||beta||^2=1","code":""},{"path":"http://antiphon.github.io/Kdirectional/reference/sample_ellipse_beta.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sample from the OLS estimate of the beta parameters — sample_ellipse_beta","text":"","code":"sample_ellipse_beta(x, nsim = 100, tol = 0, maxiter = 500)"},{"path":"http://antiphon.github.io/Kdirectional/reference/sample_ellipse_beta.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Sample from the OLS estimate of the beta parameters — sample_ellipse_beta","text":"x ellipsoid object nsim number simulations tol tolerance comparing vector length 1 maxiter maximum number iterations try get enough samples within tolerance","code":""},{"path":"http://antiphon.github.io/Kdirectional/reference/sectorplot.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot a sector estimate — sectorplot","title":"Plot a sector estimate — sectorplot","text":"Plot sector estimate","code":""},{"path":"http://antiphon.github.io/Kdirectional/reference/sectorplot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot a sector estimate — sectorplot","text":"","code":"sectorplot(x, res = 4, col = rainbow, zlim, overlapfactor = 0.95, ...)"},{"path":"http://antiphon.github.io/Kdirectional/reference/sectorplot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot a sector estimate — sectorplot","text":"x result object one directed summaries res smoothness arc col function derive colors, see values2colors zlim passed values2colors overlapfactor <1 leaves bit space sectors ... passed plot, mostly \"main\" parameter","code":""},{"path":"http://antiphon.github.io/Kdirectional/reference/simplex_volume.html","id":null,"dir":"Reference","previous_headings":"","what":"Volume of a simplex — simplex_volume","title":"Volume of a simplex — simplex_volume","text":"Volume simplex","code":""},{"path":"http://antiphon.github.io/Kdirectional/reference/simplex_volume.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Volume of a simplex — simplex_volume","text":"","code":"simplex_volume(x)"},{"path":"http://antiphon.github.io/Kdirectional/reference/simplex_volume.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Volume of a simplex — simplex_volume","text":"x simplex, (d+1,d) matrix vertices d dimension","code":""},{"path":"http://antiphon.github.io/Kdirectional/reference/simplex_volume.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Volume of a simplex — simplex_volume","text":"x list, apply function element.","code":""},{"path":"http://antiphon.github.io/Kdirectional/reference/solve_S0.html","id":null,"dir":"Reference","previous_headings":"","what":"Solve covariance matrix from unstable X — solve_S0","title":"Solve covariance matrix from unstable X — solve_S0","text":"Solve covariance matrix unstable X","code":""},{"path":"http://antiphon.github.io/Kdirectional/reference/solve_S0.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Solve covariance matrix from unstable X — solve_S0","text":"","code":"solve_S0(Y)"},{"path":"http://antiphon.github.io/Kdirectional/reference/solve_S0.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Solve covariance matrix from unstable X — solve_S0","text":"Y matrix, nrow < ncol","code":""},{"path":"http://antiphon.github.io/Kdirectional/reference/solve_S0.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Solve covariance matrix from unstable X — solve_S0","text":"Solves inverse t(Y)","code":""},{"path":"http://antiphon.github.io/Kdirectional/reference/spectrum.html","id":null,"dir":"Reference","previous_headings":"","what":"Mugglestone and Renshaw's polar spectrums — spectrum","title":"Mugglestone and Renshaw's polar spectrums — spectrum","text":"Mugglestone Renshaw's polar spectrums","code":""},{"path":"http://antiphon.github.io/Kdirectional/reference/spectrum.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Mugglestone and Renshaw's polar spectrums — spectrum","text":"","code":"spectrum(x, std = TRUE, scale = TRUE, ...)"},{"path":"http://antiphon.github.io/Kdirectional/reference/spectrum.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Mugglestone and Renshaw's polar spectrums — spectrum","text":"x point pattern, list $x $bbox std Standardize coordinates? ... ignored (r,angle)=0 value set NA, returned $zerov return object. r range frequencies","code":""},{"path":"http://antiphon.github.io/Kdirectional/reference/sphere.grid.html","id":null,"dir":"Reference","previous_headings":"","what":"generate grids on sphere — sphere.grid","title":"generate grids on sphere — sphere.grid","text":"generate grids sphere","code":""},{"path":"http://antiphon.github.io/Kdirectional/reference/sphere.grid.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"generate grids on sphere — sphere.grid","text":"","code":"sphere.grid(N = 2, lower = TRUE, ico = TRUE)"},{"path":"http://antiphon.github.io/Kdirectional/reference/sphere.grid.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"generate grids on sphere — sphere.grid","text":"N number refinenemts lower return also lower hemishpere? ico use triangulation based icosahedron (req. rgl)? N takes refinement steps, <5! #' Two ways: ) decreasing radius ring N points equator pole alternating 2pi/N shift.    Concentrates poles, useful statitical estimation pole area things happen. B) Triangulation refining icosahedron. Returns latitude-longitude matrix. use ll2xyz ll2ai transformation.","code":""},{"path":"http://antiphon.github.io/Kdirectional/reference/summary.anisotropyprofile.html","id":null,"dir":"Reference","previous_headings":"","what":"Summary for anisotropy profile — summary.anisotropyprofile","title":"Summary for anisotropy profile — summary.anisotropyprofile","text":"Summary anisotropy profile","code":""},{"path":"http://antiphon.github.io/Kdirectional/reference/summary.anisotropyprofile.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summary for anisotropy profile — summary.anisotropyprofile","text":"","code":"# S3 method for anisotropyprofile summary(x, ...)"},{"path":"http://antiphon.github.io/Kdirectional/reference/summary.confint_fryellipsoids.html","id":null,"dir":"Reference","previous_headings":"","what":"Summary method for confint_fryellipsoid — summary.confint_fryellipsoids","title":"Summary method for confint_fryellipsoid — summary.confint_fryellipsoids","text":"Summary method confint_fryellipsoid","code":""},{"path":"http://antiphon.github.io/Kdirectional/reference/summary.confint_fryellipsoids.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summary method for confint_fryellipsoid — summary.confint_fryellipsoids","text":"","code":"# S3 method for confint_fryellipsoids summary(x, ...)"},{"path":"http://antiphon.github.io/Kdirectional/reference/summary.confint_fryellipsoids.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summary method for confint_fryellipsoid — summary.confint_fryellipsoids","text":"... ignored Fitted Fry-ellipsoids object","code":""},{"path":"http://antiphon.github.io/Kdirectional/reference/summary.confint_fryellipsoids.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Summary method for confint_fryellipsoid — summary.confint_fryellipsoids","text":"Extracts CI-table.","code":""},{"path":"http://antiphon.github.io/Kdirectional/reference/summary.ellipsoid.html","id":null,"dir":"Reference","previous_headings":"","what":"Summarise an ellipsoid — summary.ellipsoid","title":"Summarise an ellipsoid — summary.ellipsoid","text":"Summarise ellipsoid","code":""},{"path":"http://antiphon.github.io/Kdirectional/reference/summary.ellipsoid.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summarise an ellipsoid — summary.ellipsoid","text":"","code":"# S3 method for ellipsoid summary(x, ...)"},{"path":"http://antiphon.github.io/Kdirectional/reference/summary.nnangle.html","id":null,"dir":"Reference","previous_headings":"","what":"Summary method for nearest neighbour angles — summary.nnangle","title":"Summary method for nearest neighbour angles — summary.nnangle","text":"Summary method nearest neighbour angles","code":""},{"path":"http://antiphon.github.io/Kdirectional/reference/summary.nnangle.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summary method for nearest neighbour angles — summary.nnangle","text":"","code":"# S3 method for nnangle summary(x, ...)"},{"path":"http://antiphon.github.io/Kdirectional/reference/summary.nnangle.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summary method for nearest neighbour angles — summary.nnangle","text":"x object nnangle-function ... passed ks.test testing uniformity angles","code":""},{"path":"http://antiphon.github.io/Kdirectional/reference/Test_anin.html","id":null,"dir":"Reference","previous_headings":"","what":"Anisotropic and Inhomogeneous T function — Test_anin","title":"Anisotropic and Inhomogeneous T function — Test_anin","text":"Estimate Sector-T function second order reweighted (\"inhomogeneous\") pattern.","code":""},{"path":"http://antiphon.github.io/Kdirectional/reference/Test_anin.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Anisotropic and Inhomogeneous T function — Test_anin","text":"","code":"Test_anin(   x,   u,   epsilon,   r,   lambda = NULL,   lambda_h,   renormalise = TRUE,   border = 1,   ... )"},{"path":"http://antiphon.github.io/Kdirectional/reference/Test_anin.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Anisotropic and Inhomogeneous T function — Test_anin","text":"x pp, list $x~coordinates $bbox~bounding box u unit vector(s) direction, row vectors. Default: x y axes, viz. c(1,0) c(0,1). epsilon Central half angle directed sector/cone (total angle rotation cone 2*epsilon). Default: pi/4. r radius vector evaluate K lambda optional vector intensity estimates points lambda_h lambda missing, use bandwidth kernel estimate lambda(x) renormalise See details. border Use border correction? Default=1, yes. ... passed e.g. intensity_at_points","code":""},{"path":"http://antiphon.github.io/Kdirectional/reference/Test_anin.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Anisotropic and Inhomogeneous T function — Test_anin","text":"Returns dataframe.","code":""},{"path":"http://antiphon.github.io/Kdirectional/reference/Test_anin.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Anisotropic and Inhomogeneous T function — Test_anin","text":"Computes second order reweighted version Sector-T. short, count many triplets points pattern  ) difference vector's angle less 'epsilon' radians direction 'u'  b) difference vector lengths less range r. Usually r vector output vector well. estimate intensity Lambda(x) points can given ('lambda'). single value, pattern assumed homogeneous.  vector length points, pattern taken second-order stationary. case  sum pairs (,j) weighted 1/(lambda[]*lambda[j]). 'lambda' missing, 'lambda_h', single positive number,  given, used estimating non-constant Lambda(x) via Epanechnikov kernel smoothing (see intensity_at_points). 'renormalise=TRUE', normalise intensity estimate sum(1/lambda(x))=|W|. corresponds spatstat's Kinhom setting 'normpower=2'. border correction: x$bbox simple bounding box, algorithm uses translation corrected weighting 1/area(Wx intersect Wy) Wx=W+x. x$bbox bbquad-object, example rotated polygon, algorithm uses simple minus border correction.","code":""},{"path":"http://antiphon.github.io/Kdirectional/reference/theta_2_unit.html","id":null,"dir":"Reference","previous_headings":"","what":"theta (angle) to unit vector, list format input — theta_2_unit","title":"theta (angle) to unit vector, list format input — theta_2_unit","text":"Convert angle unit vector","code":""},{"path":"http://antiphon.github.io/Kdirectional/reference/theta_2_unit.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"theta (angle) to unit vector, list format input — theta_2_unit","text":"","code":"theta_2_unit(theta)"},{"path":"http://antiphon.github.io/Kdirectional/reference/theta_2_unit.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"theta (angle) to unit vector, list format input — theta_2_unit","text":"list 1 2 components, giving angle(s)","code":""},{"path":"http://antiphon.github.io/Kdirectional/reference/three_points_to_plane.html","id":null,"dir":"Reference","previous_headings":"","what":"Three points to a plane — three_points_to_plane","title":"Three points to a plane — three_points_to_plane","text":"Three points plane","code":""},{"path":"http://antiphon.github.io/Kdirectional/reference/three_points_to_plane.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Three points to a plane — three_points_to_plane","text":"","code":"three_points_to_plane(x)"},{"path":"http://antiphon.github.io/Kdirectional/reference/translation_weights.html","id":null,"dir":"Reference","previous_headings":"","what":"Translation correction weights for point pattern — translation_weights","title":"Translation correction weights for point pattern — translation_weights","text":"Defined bounding box.","code":""},{"path":"http://antiphon.github.io/Kdirectional/reference/translation_weights.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Translation correction weights for point pattern — translation_weights","text":"","code":"translation_weights(x, asMatrix = FALSE)"},{"path":"http://antiphon.github.io/Kdirectional/reference/translation_weights.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Translation correction weights for point pattern — translation_weights","text":"x Pattern, $x coordinate matrix, $bbox bounding box. asMatrix Return square symmetric matrix? Otherwise upper triangle row row.","code":""},{"path":"http://antiphon.github.io/Kdirectional/reference/translation_weights.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Translation correction weights for point pattern — translation_weights","text":"asMatrix=FALSE, vector gives weights order  (1,2), (1,3), ..., (1,n), (2,3), (2,4), ... (n-2, n-1), (n-2,n), (n-1, n)","code":""},{"path":"http://antiphon.github.io/Kdirectional/reference/triangulate_indices_cohen_hickey.html","id":null,"dir":"Reference","previous_headings":"","what":"Triangulate a polygon given by indices — triangulate_indices_cohen_hickey","title":"Triangulate a polygon given by indices — triangulate_indices_cohen_hickey","text":"Chooses first vertex first edge apex","code":""},{"path":"http://antiphon.github.io/Kdirectional/reference/triangulate_indices_cohen_hickey.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Triangulate a polygon given by indices — triangulate_indices_cohen_hickey","text":"","code":"triangulate_indices_cohen_hickey(edges)"},{"path":"http://antiphon.github.io/Kdirectional/reference/unit.vecs.html","id":null,"dir":"Reference","previous_headings":"","what":"spherical unit vectors in xyz — unit.vecs","title":"spherical unit vectors in xyz — unit.vecs","text":"spherical unit vectors xyz","code":""},{"path":"http://antiphon.github.io/Kdirectional/reference/unit.vecs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"spherical unit vectors in xyz — unit.vecs","text":"","code":"unit.vecs(...)"},{"path":"http://antiphon.github.io/Kdirectional/reference/unit_2_angle.html","id":null,"dir":"Reference","previous_headings":"","what":"Unit vector to angle — unit_2_angle","title":"Unit vector to angle — unit_2_angle","text":"Unit vector angle","code":""},{"path":"http://antiphon.github.io/Kdirectional/reference/unit_2_angle.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Unit vector to angle — unit_2_angle","text":"","code":"unit_2_angle(unit)"},{"path":"http://antiphon.github.io/Kdirectional/reference/unit_2_angle.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Unit vector to angle — unit_2_angle","text":"unit vector(s matrix, cols=dimensions)","code":""},{"path":"http://antiphon.github.io/Kdirectional/reference/unit_2_theta.html","id":null,"dir":"Reference","previous_headings":"","what":"unit vector to theta (angle) list format input — unit_2_theta","title":"unit vector to theta (angle) list format input — unit_2_theta","text":"unit vector theta (angle) list format input","code":""},{"path":"http://antiphon.github.io/Kdirectional/reference/unit_2_theta.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"unit vector to theta (angle) list format input — unit_2_theta","text":"","code":"unit_2_theta(unit)"},{"path":"http://antiphon.github.io/Kdirectional/reference/wavelet_saed.html","id":null,"dir":"Reference","previous_headings":"","what":"Scale-angle-energy-density — wavelet_saed","title":"Scale-angle-energy-density — wavelet_saed","text":"2D moment. Morlet anisotropic wavelet","code":""},{"path":"http://antiphon.github.io/Kdirectional/reference/wavelet_saed.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Scale-angle-energy-density — wavelet_saed","text":"","code":"wavelet_saed(   x,   theta = seq(0, pi, l = 30),   scales,   shift_res = 20,   D = 0.1,   k0 = 5.5,   ... )"},{"path":"http://antiphon.github.io/Kdirectional/reference/wavelet_saed.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Scale-angle-energy-density — wavelet_saed","text":"x point pattern, list $x $bbox theta angles scales scales shift_res resolution shift-grid ... ignored","code":""},{"path":"http://antiphon.github.io/Kdirectional/reference/xyz2ai.html","id":null,"dir":"Reference","previous_headings":"","what":"xyz to azi inc — xyz2ai","title":"xyz to azi inc — xyz2ai","text":"xyz azi inc","code":""},{"path":"http://antiphon.github.io/Kdirectional/reference/xyz2ai.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"xyz to azi inc — xyz2ai","text":"","code":"xyz2ai(xyz)"},{"path":"http://antiphon.github.io/Kdirectional/reference/xyz2globe.html","id":null,"dir":"Reference","previous_headings":"","what":"OLD for plotting on the globe, we need to trasform as the texture is fuckd up — xyz2globe","title":"OLD for plotting on the globe, we need to trasform as the texture is fuckd up — xyz2globe","text":"OLD plotting globe, need trasform texture fuckd ","code":""},{"path":"http://antiphon.github.io/Kdirectional/reference/xyz2globe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"OLD for plotting on the globe, we need to trasform as the texture is fuckd up — xyz2globe","text":"","code":"xyz2globe(xyz)"},{"path":"http://antiphon.github.io/Kdirectional/reference/xyz2ll.html","id":null,"dir":"Reference","previous_headings":"","what":"xyz to lat lon — xyz2ll","title":"xyz to lat lon — xyz2ll","text":"xyz lat lon","code":""},{"path":"http://antiphon.github.io/Kdirectional/reference/xyz2ll.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"xyz to lat lon — xyz2ll","text":"","code":"xyz2ll(xyz)"},{"path":"http://antiphon.github.io/Kdirectional/reference/xyzrotate.html","id":null,"dir":"Reference","previous_headings":"","what":"rotate xyz coordinates — xyzrotate","title":"rotate xyz coordinates — xyzrotate","text":"rotate xyz coordinates","code":""},{"path":"http://antiphon.github.io/Kdirectional/reference/xyzrotate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"rotate xyz coordinates — xyzrotate","text":"","code":"xyzrotate(xyz, ...)"}]
