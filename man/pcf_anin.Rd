% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/pcf_anin_conical.R
\name{pcf_anin}
\alias{pcf_anin}
\title{Inhomogeneous anisotropic pcf function, sector version}
\usage{
pcf_anin(
  x,
  u,
  epsilon,
  r,
  lambda = NULL,
  lambda_h,
  r_h,
  stoyan = 0.15,
  renormalise = TRUE,
  border = 1,
  divisor = "d",
  ...
)
}
\arguments{
\item{x}{pp, list with $x~coordinates $bbox~bounding box}

\item{u}{unit vector(s) of direction, as row vectors. Default: x and y axis.}

\item{epsilon}{Central half angle for the directed sector/cone (total angle of the rotation cone is 2*epsilon)}

\item{r}{radius vector at which to evaluate the function}

\item{lambda}{optional vector of intensity estimates at points}

\item{lambda_h}{if lambda missing, use this bandwidth in a kernel estimate of lambda(x)}

\item{r_h}{smoothing for range dimension, epanechnikov kernel}

\item{stoyan}{If r_h not given, use r_h=stoyan/lambda^(1/dim). Same as 'stoyan' in spatstat's pcf.}

\item{renormalise}{See details.}

\item{border}{Use translation correction? Default=1, yes. Only for cuboidal windows.}

\item{divisor}{See spatstat's pcf.ppp for this.}

\item{...}{passed on to e.g. \link{intensity_at_points}}
}
\value{
Returns a dataframe.
}
\description{
Estimate a sector/cone pcf function for second order reweighted ("inhomogeneous") pattern.
}
\details{
Computes a second order reweighted version of the sector-pcf. The sector pcf differs from the true anisotropic pcf
by assuming that the anisotropic pcf is constant over the small arc/cap of the sector, thus averaging over that
data-area and providing more stable estimates. 

Lambda(x) at points can be given, 
or else it will be estimated using kernel smoothing. See \link{intensity_at_points}.

If 'renormalise=TRUE', we normalise the lambda estimate so that sum(1/lambda(x))=|W|. This corresponds in \code{spatstat}'s \code{Kinhom} to setting 'normpower=2'.
}
\seealso{
\code{\link{pcf_anin_cylinder}}
}
